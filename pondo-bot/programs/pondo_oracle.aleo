import credits.aleo;
program pondo_oracle.aleo;

struct committee_state:
    is_open as boolean;
    commission as u8;

struct bond_state:
    validator as address;
    microcredits as u64;


struct validator_datum:
    delegator as address;
    validator as address;
    block_height as u32;
    bonded_microcredits as u64;
    microcredits_yield_per_epoch as u128;
    commission as u8;
    boost as u128;

struct validator_boost:
    epoch as u32;
    boost_amount as u64;


mapping delegator_to_validator:
	key as address.public;
	value as address.public;


mapping validator_data:
	key as address.public;
	value as validator_datum.public;


mapping top_validators:
	key as u8.public;
	value as [address; 10u32].public;


mapping banned_validators:
	key as address.public;
	value as boolean.public;


mapping pondo_tvl:
	key as u8.public;
	value as u64.public;


mapping validator_boosting:
	key as address.public;
	value as validator_boost.public;


mapping control_addresses:
	key as address.public;
	value as boolean.public;


mapping delegator_allocation:
	key as u8.public;
	value as [u128; 10u32].public;


function initialize:
    async initialize into r0;
    output r0 as pondo_oracle.aleo/initialize.future;

finalize initialize:
    set true into control_addresses[aleo12shtwnmf49t5atmad2jnk3e58ahtp749d9trctt9z3wryxyzt5pspp0nd0];
    set false into control_addresses[pondo_delegator1.aleo];
    set false into control_addresses[pondo_delegator2.aleo];
    set false into control_addresses[pondo_delegator3.aleo];
    set false into control_addresses[pondo_delegator4.aleo];
    set false into control_addresses[pondo_delegator5.aleo];
    cast  3700u128 2600u128 1600u128 1200u128 900u128 900u128 900u128 900u128 900u128 900u128 into r0 as [u128; 10u32];
    set r0 into delegator_allocation[0u8];
    cast  aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0 into r1 as [address; 10u32];
    set r1 into top_validators[0u8];




function add_control_address:
    input r0 as address.public;
    async add_control_address r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/add_control_address.future;

finalize add_control_address:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set false into control_addresses[r0];




function remove_control_address:
    input r0 as address.public;
    async remove_control_address r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/remove_control_address.future;

finalize remove_control_address:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    remove control_addresses[r0];




function update_admin:
    input r0 as address.public;
    async update_admin r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/update_admin.future;

finalize update_admin:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set true into control_addresses[r0];
    remove control_addresses[r1];




function update_delegator_allocations:
    input r0 as [u128; 10u32].public;
    async update_delegator_allocations r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/update_delegator_allocations.future;

finalize update_delegator_allocations:
    input r0 as [u128; 10u32].public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set r0 into delegator_allocation[0u8];




function propose_delegator:
    input r0 as address.public;
    assert.neq self.caller self.signer;
    async propose_delegator self.caller r0 into r1;
    output r1 as pondo_oracle.aleo/propose_delegator.future;

finalize propose_delegator:
    input r0 as address.public;
    input r1 as address.public;
    contains banned_validators[r1] into r2;
    assert.eq r2 false;
    contains delegator_to_validator[r0] into r3;
    assert.eq r3 false;
    set r1 into delegator_to_validator[r0];




function add_delegator:
    input r0 as address.public;
    async add_delegator r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/add_delegator.future;

finalize add_delegator:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    contains delegator_to_validator[r0] into r3;
    assert.eq r3 true;
    get credits.aleo/withdraw[r0] into r4;
    assert.eq r4 r0;
    get delegator_to_validator[r0] into r5;
    get credits.aleo/bonded[r0] into r6;
    assert.eq r6.validator r5;
    contains banned_validators[r5] into r7;
    assert.eq r7 false;
    contains validator_data[r0] into r8;
    assert.eq r8 false;
    get credits.aleo/committee[r5] into r9;
    assert.eq r9.is_open true;
    lt r9.commission 50u8 into r10;
    assert.eq r10 true;
    cast r0 r5 block.height r6.microcredits 0u128 r9.commission 0u128 into r11 as validator_datum;
    set r11 into validator_data[r0];






function update_data:
    input r0 as address.public;
    async update_data r0 into r1;
    output r1 as pondo_oracle.aleo/update_data.future;

finalize update_data:
    input r0 as address.public;
    get validator_data[r0] into r1;
    contains banned_validators[r1.validator] into r2;
    assert.eq r2 false;
    rem block.height 120_960u32 into r3;
    gte r3 103_680u32 into r4;
    assert.eq r4 true;
    sub block.height r1.block_height into r5;
    gt r5 103_680u32 into r6;
    assert.eq r6 true;
    get credits.aleo/committee[r1.validator] into r7;
    lt r7.commission 50u8 into r8;
    assert.eq r8 true;
    assert.eq r7.is_open true;
    get credits.aleo/bonded[r0] into r9;
    div block.height 120_960u32 into r10;
    cast r9.microcredits into r11 as u128;
    cast r1.bonded_microcredits into r12 as u128;
    sub r11 r12 into r13;
    mul r13 10_000_000_000u128 into r14;
    cast r1.bonded_microcredits into r15 as u128;
    div r14 r15 into r16;
    cast 120_960u32 into r17 as u128;
    mul r16 r17 into r18;
    cast r5 into r19 as u128;
    div r18 r19 into r20;
    cast 0u32 0u64 into r21 as validator_boost;
    get.or_use validator_boosting[r1.validator] r21 into r22;
    is.eq r22.epoch r10 into r23;
    cast r22.boost_amount into r24 as u128;
    ternary r23 r24 0u128 into r25;
    get.or_use pondo_tvl[0u8] 10_000_000_000_000_000u64 into r26;
    cast r26 into r27 as u128;
    mul r25 10_000_000_000u128 into r28;
    cast r27 into r29 as u128;
    div r28 r29 into r30;
    div r1.block_height 120_960u32 into r31;
    add r31 1u32 into r32;
    is.eq r32 r10 into r33;
    add r20 r30 into r34;
    ternary r33 r34 0u128 into r35;
    cast r0 r1.validator block.height r9.microcredits r35 r7.commission r25 into r36 as validator_datum;
    set r36 into validator_data[r0];
    get top_validators[0u8] into r37;
    cast aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc 0u32 0u64 0u128 0u8 0u128 into r38 as validator_datum;
    get.or_use validator_data[r37[0u32]] r38 into r39;
    get.or_use validator_data[r37[1u32]] r38 into r40;
    get.or_use validator_data[r37[2u32]] r38 into r41;
    get.or_use validator_data[r37[3u32]] r38 into r42;
    get.or_use validator_data[r37[4u32]] r38 into r43;
    get.or_use validator_data[r37[5u32]] r38 into r44;
    get.or_use validator_data[r37[6u32]] r38 into r45;
    get.or_use validator_data[r37[7u32]] r38 into r46;
    get.or_use validator_data[r37[8u32]] r38 into r47;
    get.or_use validator_data[r37[9u32]] r38 into r48;
    mul r10 120_960u32 into r49;
    get delegator_allocation[0u8] into r50;
    is.eq r36.delegator r39.delegator into r51;
    is.eq r36.validator r39.validator into r52;
    lt r39.block_height r49 into r53;
    lt r36.block_height r49 into r54;
    is.eq r39.microcredits_yield_per_epoch 0u128 into r55;
    is.eq r36.microcredits_yield_per_epoch 0u128 into r56;
    mul r36.boost 10_000u128 into r57;
    div r57 r50[0u32] into r58;
    add r36.microcredits_yield_per_epoch r58 into r59;
    mul r39.boost 10_000u128 into r60;
    div r60 r50[0u32] into r61;
    add r39.microcredits_yield_per_epoch r61 into r62;
    gt r59 r62 into r63;
    lt r59 r62 into r64;
    ternary r52 r63 r64 into r65;
    ternary r65 r39.delegator r36.delegator into r66;
    ternary r65 r39.validator r36.validator into r67;
    ternary r65 r39.block_height r36.block_height into r68;
    ternary r65 r39.bonded_microcredits r36.bonded_microcredits into r69;
    ternary r65 r39.microcredits_yield_per_epoch r36.microcredits_yield_per_epoch into r70;
    ternary r65 r39.commission r36.commission into r71;
    ternary r65 r39.boost r36.boost into r72;
    cast r66 r67 r68 r69 r70 r71 r72 into r73 as validator_datum;
    ternary r65 r36.delegator r39.delegator into r74;
    ternary r65 r36.validator r39.validator into r75;
    ternary r65 r36.block_height r39.block_height into r76;
    ternary r65 r36.bonded_microcredits r39.bonded_microcredits into r77;
    ternary r65 r36.microcredits_yield_per_epoch r39.microcredits_yield_per_epoch into r78;
    ternary r65 r36.commission r39.commission into r79;
    ternary r65 r36.boost r39.boost into r80;
    cast r74 r75 r76 r77 r78 r79 r80 into r81 as validator_datum;
    ternary r65 r52 r52 into r82;
    ternary r56 r39.delegator r73.delegator into r83;
    ternary r56 r39.validator r73.validator into r84;
    ternary r56 r39.block_height r73.block_height into r85;
    ternary r56 r39.bonded_microcredits r73.bonded_microcredits into r86;
    ternary r56 r39.microcredits_yield_per_epoch r73.microcredits_yield_per_epoch into r87;
    ternary r56 r39.commission r73.commission into r88;
    ternary r56 r39.boost r73.boost into r89;
    cast r83 r84 r85 r86 r87 r88 r89 into r90 as validator_datum;
    ternary r56 r36.delegator r81.delegator into r91;
    ternary r56 r36.validator r81.validator into r92;
    ternary r56 r36.block_height r81.block_height into r93;
    ternary r56 r36.bonded_microcredits r81.bonded_microcredits into r94;
    ternary r56 r36.microcredits_yield_per_epoch r81.microcredits_yield_per_epoch into r95;
    ternary r56 r36.commission r81.commission into r96;
    ternary r56 r36.boost r81.boost into r97;
    cast r91 r92 r93 r94 r95 r96 r97 into r98 as validator_datum;
    ternary r56 r52 r82 into r99;
    ternary r55 r36.delegator r90.delegator into r100;
    ternary r55 r36.validator r90.validator into r101;
    ternary r55 r36.block_height r90.block_height into r102;
    ternary r55 r36.bonded_microcredits r90.bonded_microcredits into r103;
    ternary r55 r36.microcredits_yield_per_epoch r90.microcredits_yield_per_epoch into r104;
    ternary r55 r36.commission r90.commission into r105;
    ternary r55 r36.boost r90.boost into r106;
    cast r100 r101 r102 r103 r104 r105 r106 into r107 as validator_datum;
    ternary r55 r39.delegator r98.delegator into r108;
    ternary r55 r39.validator r98.validator into r109;
    ternary r55 r39.block_height r98.block_height into r110;
    ternary r55 r39.bonded_microcredits r98.bonded_microcredits into r111;
    ternary r55 r39.microcredits_yield_per_epoch r98.microcredits_yield_per_epoch into r112;
    ternary r55 r39.commission r98.commission into r113;
    ternary r55 r39.boost r98.boost into r114;
    cast r108 r109 r110 r111 r112 r113 r114 into r115 as validator_datum;
    ternary r55 r52 r99 into r116;
    ternary r54 r39.delegator r107.delegator into r117;
    ternary r54 r39.validator r107.validator into r118;
    ternary r54 r39.block_height r107.block_height into r119;
    ternary r54 r39.bonded_microcredits r107.bonded_microcredits into r120;
    ternary r54 r39.microcredits_yield_per_epoch r107.microcredits_yield_per_epoch into r121;
    ternary r54 r39.commission r107.commission into r122;
    ternary r54 r39.boost r107.boost into r123;
    cast r117 r118 r119 r120 r121 r122 r123 into r124 as validator_datum;
    ternary r54 r36.delegator r115.delegator into r125;
    ternary r54 r36.validator r115.validator into r126;
    ternary r54 r36.block_height r115.block_height into r127;
    ternary r54 r36.bonded_microcredits r115.bonded_microcredits into r128;
    ternary r54 r36.microcredits_yield_per_epoch r115.microcredits_yield_per_epoch into r129;
    ternary r54 r36.commission r115.commission into r130;
    ternary r54 r36.boost r115.boost into r131;
    cast r125 r126 r127 r128 r129 r130 r131 into r132 as validator_datum;
    ternary r54 r52 r116 into r133;
    ternary r53 r36.delegator r124.delegator into r134;
    ternary r53 r36.validator r124.validator into r135;
    ternary r53 r36.block_height r124.block_height into r136;
    ternary r53 r36.bonded_microcredits r124.bonded_microcredits into r137;
    ternary r53 r36.microcredits_yield_per_epoch r124.microcredits_yield_per_epoch into r138;
    ternary r53 r36.commission r124.commission into r139;
    ternary r53 r36.boost r124.boost into r140;
    cast r134 r135 r136 r137 r138 r139 r140 into r141 as validator_datum;
    ternary r53 r39.delegator r132.delegator into r142;
    ternary r53 r39.validator r132.validator into r143;
    ternary r53 r39.block_height r132.block_height into r144;
    ternary r53 r39.bonded_microcredits r132.bonded_microcredits into r145;
    ternary r53 r39.microcredits_yield_per_epoch r132.microcredits_yield_per_epoch into r146;
    ternary r53 r39.commission r132.commission into r147;
    ternary r53 r39.boost r132.boost into r148;
    cast r142 r143 r144 r145 r146 r147 r148 into r149 as validator_datum;
    ternary r53 r52 r133 into r150;
    ternary r51 r36.delegator r141.delegator into r151;
    ternary r51 r36.validator r141.validator into r152;
    ternary r51 r36.block_height r141.block_height into r153;
    ternary r51 r36.bonded_microcredits r141.bonded_microcredits into r154;
    ternary r51 r36.microcredits_yield_per_epoch r141.microcredits_yield_per_epoch into r155;
    ternary r51 r36.commission r141.commission into r156;
    ternary r51 r36.boost r141.boost into r157;
    cast r151 r152 r153 r154 r155 r156 r157 into r158 as validator_datum;
    ternary r51 r39.delegator r149.delegator into r159;
    ternary r51 r39.validator r149.validator into r160;
    ternary r51 r39.block_height r149.block_height into r161;
    ternary r51 r39.bonded_microcredits r149.bonded_microcredits into r162;
    ternary r51 r39.microcredits_yield_per_epoch r149.microcredits_yield_per_epoch into r163;
    ternary r51 r39.commission r149.commission into r164;
    ternary r51 r39.boost r149.boost into r165;
    cast r159 r160 r161 r162 r163 r164 r165 into r166 as validator_datum;
    ternary r51 true r150 into r167;
    ternary false r39.delegator r158.delegator into r168;
    ternary false r39.validator r158.validator into r169;
    ternary false r39.block_height r158.block_height into r170;
    ternary false r39.bonded_microcredits r158.bonded_microcredits into r171;
    ternary false r39.microcredits_yield_per_epoch r158.microcredits_yield_per_epoch into r172;
    ternary false r39.commission r158.commission into r173;
    ternary false r39.boost r158.boost into r174;
    cast r168 r169 r170 r171 r172 r173 r174 into r175 as validator_datum;
    ternary false r36.delegator r166.delegator into r176;
    ternary false r36.validator r166.validator into r177;
    ternary false r36.block_height r166.block_height into r178;
    ternary false r36.bonded_microcredits r166.bonded_microcredits into r179;
    ternary false r36.microcredits_yield_per_epoch r166.microcredits_yield_per_epoch into r180;
    ternary false r36.commission r166.commission into r181;
    ternary false r36.boost r166.boost into r182;
    cast r176 r177 r178 r179 r180 r181 r182 into r183 as validator_datum;
    ternary false true r167 into r184;
    is.eq r183.delegator r40.delegator into r185;
    is.eq r183.validator r40.validator into r186;
    lt r40.block_height r49 into r187;
    lt r183.block_height r49 into r188;
    is.eq r40.microcredits_yield_per_epoch 0u128 into r189;
    is.eq r183.microcredits_yield_per_epoch 0u128 into r190;
    mul r183.boost 10_000u128 into r191;
    div r191 r50[1u32] into r192;
    add r183.microcredits_yield_per_epoch r192 into r193;
    mul r40.boost 10_000u128 into r194;
    div r194 r50[1u32] into r195;
    add r40.microcredits_yield_per_epoch r195 into r196;
    gt r193 r196 into r197;
    lt r193 r196 into r198;
    ternary r186 r197 r198 into r199;
    ternary r199 r40.delegator r183.delegator into r200;
    ternary r199 r40.validator r183.validator into r201;
    ternary r199 r40.block_height r183.block_height into r202;
    ternary r199 r40.bonded_microcredits r183.bonded_microcredits into r203;
    ternary r199 r40.microcredits_yield_per_epoch r183.microcredits_yield_per_epoch into r204;
    ternary r199 r40.commission r183.commission into r205;
    ternary r199 r40.boost r183.boost into r206;
    cast r200 r201 r202 r203 r204 r205 r206 into r207 as validator_datum;
    ternary r199 r183.delegator r40.delegator into r208;
    ternary r199 r183.validator r40.validator into r209;
    ternary r199 r183.block_height r40.block_height into r210;
    ternary r199 r183.bonded_microcredits r40.bonded_microcredits into r211;
    ternary r199 r183.microcredits_yield_per_epoch r40.microcredits_yield_per_epoch into r212;
    ternary r199 r183.commission r40.commission into r213;
    ternary r199 r183.boost r40.boost into r214;
    cast r208 r209 r210 r211 r212 r213 r214 into r215 as validator_datum;
    ternary r199 r186 r186 into r216;
    ternary r190 r40.delegator r207.delegator into r217;
    ternary r190 r40.validator r207.validator into r218;
    ternary r190 r40.block_height r207.block_height into r219;
    ternary r190 r40.bonded_microcredits r207.bonded_microcredits into r220;
    ternary r190 r40.microcredits_yield_per_epoch r207.microcredits_yield_per_epoch into r221;
    ternary r190 r40.commission r207.commission into r222;
    ternary r190 r40.boost r207.boost into r223;
    cast r217 r218 r219 r220 r221 r222 r223 into r224 as validator_datum;
    ternary r190 r183.delegator r215.delegator into r225;
    ternary r190 r183.validator r215.validator into r226;
    ternary r190 r183.block_height r215.block_height into r227;
    ternary r190 r183.bonded_microcredits r215.bonded_microcredits into r228;
    ternary r190 r183.microcredits_yield_per_epoch r215.microcredits_yield_per_epoch into r229;
    ternary r190 r183.commission r215.commission into r230;
    ternary r190 r183.boost r215.boost into r231;
    cast r225 r226 r227 r228 r229 r230 r231 into r232 as validator_datum;
    ternary r190 r186 r216 into r233;
    ternary r189 r183.delegator r224.delegator into r234;
    ternary r189 r183.validator r224.validator into r235;
    ternary r189 r183.block_height r224.block_height into r236;
    ternary r189 r183.bonded_microcredits r224.bonded_microcredits into r237;
    ternary r189 r183.microcredits_yield_per_epoch r224.microcredits_yield_per_epoch into r238;
    ternary r189 r183.commission r224.commission into r239;
    ternary r189 r183.boost r224.boost into r240;
    cast r234 r235 r236 r237 r238 r239 r240 into r241 as validator_datum;
    ternary r189 r40.delegator r232.delegator into r242;
    ternary r189 r40.validator r232.validator into r243;
    ternary r189 r40.block_height r232.block_height into r244;
    ternary r189 r40.bonded_microcredits r232.bonded_microcredits into r245;
    ternary r189 r40.microcredits_yield_per_epoch r232.microcredits_yield_per_epoch into r246;
    ternary r189 r40.commission r232.commission into r247;
    ternary r189 r40.boost r232.boost into r248;
    cast r242 r243 r244 r245 r246 r247 r248 into r249 as validator_datum;
    ternary r189 r186 r233 into r250;
    ternary r188 r40.delegator r241.delegator into r251;
    ternary r188 r40.validator r241.validator into r252;
    ternary r188 r40.block_height r241.block_height into r253;
    ternary r188 r40.bonded_microcredits r241.bonded_microcredits into r254;
    ternary r188 r40.microcredits_yield_per_epoch r241.microcredits_yield_per_epoch into r255;
    ternary r188 r40.commission r241.commission into r256;
    ternary r188 r40.boost r241.boost into r257;
    cast r251 r252 r253 r254 r255 r256 r257 into r258 as validator_datum;
    ternary r188 r183.delegator r249.delegator into r259;
    ternary r188 r183.validator r249.validator into r260;
    ternary r188 r183.block_height r249.block_height into r261;
    ternary r188 r183.bonded_microcredits r249.bonded_microcredits into r262;
    ternary r188 r183.microcredits_yield_per_epoch r249.microcredits_yield_per_epoch into r263;
    ternary r188 r183.commission r249.commission into r264;
    ternary r188 r183.boost r249.boost into r265;
    cast r259 r260 r261 r262 r263 r264 r265 into r266 as validator_datum;
    ternary r188 r186 r250 into r267;
    ternary r187 r183.delegator r258.delegator into r268;
    ternary r187 r183.validator r258.validator into r269;
    ternary r187 r183.block_height r258.block_height into r270;
    ternary r187 r183.bonded_microcredits r258.bonded_microcredits into r271;
    ternary r187 r183.microcredits_yield_per_epoch r258.microcredits_yield_per_epoch into r272;
    ternary r187 r183.commission r258.commission into r273;
    ternary r187 r183.boost r258.boost into r274;
    cast r268 r269 r270 r271 r272 r273 r274 into r275 as validator_datum;
    ternary r187 r40.delegator r266.delegator into r276;
    ternary r187 r40.validator r266.validator into r277;
    ternary r187 r40.block_height r266.block_height into r278;
    ternary r187 r40.bonded_microcredits r266.bonded_microcredits into r279;
    ternary r187 r40.microcredits_yield_per_epoch r266.microcredits_yield_per_epoch into r280;
    ternary r187 r40.commission r266.commission into r281;
    ternary r187 r40.boost r266.boost into r282;
    cast r276 r277 r278 r279 r280 r281 r282 into r283 as validator_datum;
    ternary r187 r186 r267 into r284;
    ternary r185 r183.delegator r275.delegator into r285;
    ternary r185 r183.validator r275.validator into r286;
    ternary r185 r183.block_height r275.block_height into r287;
    ternary r185 r183.bonded_microcredits r275.bonded_microcredits into r288;
    ternary r185 r183.microcredits_yield_per_epoch r275.microcredits_yield_per_epoch into r289;
    ternary r185 r183.commission r275.commission into r290;
    ternary r185 r183.boost r275.boost into r291;
    cast r285 r286 r287 r288 r289 r290 r291 into r292 as validator_datum;
    ternary r185 r40.delegator r283.delegator into r293;
    ternary r185 r40.validator r283.validator into r294;
    ternary r185 r40.block_height r283.block_height into r295;
    ternary r185 r40.bonded_microcredits r283.bonded_microcredits into r296;
    ternary r185 r40.microcredits_yield_per_epoch r283.microcredits_yield_per_epoch into r297;
    ternary r185 r40.commission r283.commission into r298;
    ternary r185 r40.boost r283.boost into r299;
    cast r293 r294 r295 r296 r297 r298 r299 into r300 as validator_datum;
    ternary r185 true r284 into r301;
    ternary r184 r40.delegator r292.delegator into r302;
    ternary r184 r40.validator r292.validator into r303;
    ternary r184 r40.block_height r292.block_height into r304;
    ternary r184 r40.bonded_microcredits r292.bonded_microcredits into r305;
    ternary r184 r40.microcredits_yield_per_epoch r292.microcredits_yield_per_epoch into r306;
    ternary r184 r40.commission r292.commission into r307;
    ternary r184 r40.boost r292.boost into r308;
    cast r302 r303 r304 r305 r306 r307 r308 into r309 as validator_datum;
    ternary r184 r183.delegator r300.delegator into r310;
    ternary r184 r183.validator r300.validator into r311;
    ternary r184 r183.block_height r300.block_height into r312;
    ternary r184 r183.bonded_microcredits r300.bonded_microcredits into r313;
    ternary r184 r183.microcredits_yield_per_epoch r300.microcredits_yield_per_epoch into r314;
    ternary r184 r183.commission r300.commission into r315;
    ternary r184 r183.boost r300.boost into r316;
    cast r310 r311 r312 r313 r314 r315 r316 into r317 as validator_datum;
    ternary r184 true r301 into r318;
    is.eq r317.delegator r41.delegator into r319;
    is.eq r317.validator r41.validator into r320;
    lt r41.block_height r49 into r321;
    lt r317.block_height r49 into r322;
    is.eq r41.microcredits_yield_per_epoch 0u128 into r323;
    is.eq r317.microcredits_yield_per_epoch 0u128 into r324;
    mul r317.boost 10_000u128 into r325;
    div r325 r50[2u32] into r326;
    add r317.microcredits_yield_per_epoch r326 into r327;
    mul r41.boost 10_000u128 into r328;
    div r328 r50[2u32] into r329;
    add r41.microcredits_yield_per_epoch r329 into r330;
    gt r327 r330 into r331;
    lt r327 r330 into r332;
    ternary r320 r331 r332 into r333;
    ternary r333 r41.delegator r317.delegator into r334;
    ternary r333 r41.validator r317.validator into r335;
    ternary r333 r41.block_height r317.block_height into r336;
    ternary r333 r41.bonded_microcredits r317.bonded_microcredits into r337;
    ternary r333 r41.microcredits_yield_per_epoch r317.microcredits_yield_per_epoch into r338;
    ternary r333 r41.commission r317.commission into r339;
    ternary r333 r41.boost r317.boost into r340;
    cast r334 r335 r336 r337 r338 r339 r340 into r341 as validator_datum;
    ternary r333 r317.delegator r41.delegator into r342;
    ternary r333 r317.validator r41.validator into r343;
    ternary r333 r317.block_height r41.block_height into r344;
    ternary r333 r317.bonded_microcredits r41.bonded_microcredits into r345;
    ternary r333 r317.microcredits_yield_per_epoch r41.microcredits_yield_per_epoch into r346;
    ternary r333 r317.commission r41.commission into r347;
    ternary r333 r317.boost r41.boost into r348;
    cast r342 r343 r344 r345 r346 r347 r348 into r349 as validator_datum;
    ternary r333 r320 r320 into r350;
    ternary r324 r41.delegator r341.delegator into r351;
    ternary r324 r41.validator r341.validator into r352;
    ternary r324 r41.block_height r341.block_height into r353;
    ternary r324 r41.bonded_microcredits r341.bonded_microcredits into r354;
    ternary r324 r41.microcredits_yield_per_epoch r341.microcredits_yield_per_epoch into r355;
    ternary r324 r41.commission r341.commission into r356;
    ternary r324 r41.boost r341.boost into r357;
    cast r351 r352 r353 r354 r355 r356 r357 into r358 as validator_datum;
    ternary r324 r317.delegator r349.delegator into r359;
    ternary r324 r317.validator r349.validator into r360;
    ternary r324 r317.block_height r349.block_height into r361;
    ternary r324 r317.bonded_microcredits r349.bonded_microcredits into r362;
    ternary r324 r317.microcredits_yield_per_epoch r349.microcredits_yield_per_epoch into r363;
    ternary r324 r317.commission r349.commission into r364;
    ternary r324 r317.boost r349.boost into r365;
    cast r359 r360 r361 r362 r363 r364 r365 into r366 as validator_datum;
    ternary r324 r320 r350 into r367;
    ternary r323 r317.delegator r358.delegator into r368;
    ternary r323 r317.validator r358.validator into r369;
    ternary r323 r317.block_height r358.block_height into r370;
    ternary r323 r317.bonded_microcredits r358.bonded_microcredits into r371;
    ternary r323 r317.microcredits_yield_per_epoch r358.microcredits_yield_per_epoch into r372;
    ternary r323 r317.commission r358.commission into r373;
    ternary r323 r317.boost r358.boost into r374;
    cast r368 r369 r370 r371 r372 r373 r374 into r375 as validator_datum;
    ternary r323 r41.delegator r366.delegator into r376;
    ternary r323 r41.validator r366.validator into r377;
    ternary r323 r41.block_height r366.block_height into r378;
    ternary r323 r41.bonded_microcredits r366.bonded_microcredits into r379;
    ternary r323 r41.microcredits_yield_per_epoch r366.microcredits_yield_per_epoch into r380;
    ternary r323 r41.commission r366.commission into r381;
    ternary r323 r41.boost r366.boost into r382;
    cast r376 r377 r378 r379 r380 r381 r382 into r383 as validator_datum;
    ternary r323 r320 r367 into r384;
    ternary r322 r41.delegator r375.delegator into r385;
    ternary r322 r41.validator r375.validator into r386;
    ternary r322 r41.block_height r375.block_height into r387;
    ternary r322 r41.bonded_microcredits r375.bonded_microcredits into r388;
    ternary r322 r41.microcredits_yield_per_epoch r375.microcredits_yield_per_epoch into r389;
    ternary r322 r41.commission r375.commission into r390;
    ternary r322 r41.boost r375.boost into r391;
    cast r385 r386 r387 r388 r389 r390 r391 into r392 as validator_datum;
    ternary r322 r317.delegator r383.delegator into r393;
    ternary r322 r317.validator r383.validator into r394;
    ternary r322 r317.block_height r383.block_height into r395;
    ternary r322 r317.bonded_microcredits r383.bonded_microcredits into r396;
    ternary r322 r317.microcredits_yield_per_epoch r383.microcredits_yield_per_epoch into r397;
    ternary r322 r317.commission r383.commission into r398;
    ternary r322 r317.boost r383.boost into r399;
    cast r393 r394 r395 r396 r397 r398 r399 into r400 as validator_datum;
    ternary r322 r320 r384 into r401;
    ternary r321 r317.delegator r392.delegator into r402;
    ternary r321 r317.validator r392.validator into r403;
    ternary r321 r317.block_height r392.block_height into r404;
    ternary r321 r317.bonded_microcredits r392.bonded_microcredits into r405;
    ternary r321 r317.microcredits_yield_per_epoch r392.microcredits_yield_per_epoch into r406;
    ternary r321 r317.commission r392.commission into r407;
    ternary r321 r317.boost r392.boost into r408;
    cast r402 r403 r404 r405 r406 r407 r408 into r409 as validator_datum;
    ternary r321 r41.delegator r400.delegator into r410;
    ternary r321 r41.validator r400.validator into r411;
    ternary r321 r41.block_height r400.block_height into r412;
    ternary r321 r41.bonded_microcredits r400.bonded_microcredits into r413;
    ternary r321 r41.microcredits_yield_per_epoch r400.microcredits_yield_per_epoch into r414;
    ternary r321 r41.commission r400.commission into r415;
    ternary r321 r41.boost r400.boost into r416;
    cast r410 r411 r412 r413 r414 r415 r416 into r417 as validator_datum;
    ternary r321 r320 r401 into r418;
    ternary r319 r317.delegator r409.delegator into r419;
    ternary r319 r317.validator r409.validator into r420;
    ternary r319 r317.block_height r409.block_height into r421;
    ternary r319 r317.bonded_microcredits r409.bonded_microcredits into r422;
    ternary r319 r317.microcredits_yield_per_epoch r409.microcredits_yield_per_epoch into r423;
    ternary r319 r317.commission r409.commission into r424;
    ternary r319 r317.boost r409.boost into r425;
    cast r419 r420 r421 r422 r423 r424 r425 into r426 as validator_datum;
    ternary r319 r41.delegator r417.delegator into r427;
    ternary r319 r41.validator r417.validator into r428;
    ternary r319 r41.block_height r417.block_height into r429;
    ternary r319 r41.bonded_microcredits r417.bonded_microcredits into r430;
    ternary r319 r41.microcredits_yield_per_epoch r417.microcredits_yield_per_epoch into r431;
    ternary r319 r41.commission r417.commission into r432;
    ternary r319 r41.boost r417.boost into r433;
    cast r427 r428 r429 r430 r431 r432 r433 into r434 as validator_datum;
    ternary r319 true r418 into r435;
    ternary r318 r41.delegator r426.delegator into r436;
    ternary r318 r41.validator r426.validator into r437;
    ternary r318 r41.block_height r426.block_height into r438;
    ternary r318 r41.bonded_microcredits r426.bonded_microcredits into r439;
    ternary r318 r41.microcredits_yield_per_epoch r426.microcredits_yield_per_epoch into r440;
    ternary r318 r41.commission r426.commission into r441;
    ternary r318 r41.boost r426.boost into r442;
    cast r436 r437 r438 r439 r440 r441 r442 into r443 as validator_datum;
    ternary r318 r317.delegator r434.delegator into r444;
    ternary r318 r317.validator r434.validator into r445;
    ternary r318 r317.block_height r434.block_height into r446;
    ternary r318 r317.bonded_microcredits r434.bonded_microcredits into r447;
    ternary r318 r317.microcredits_yield_per_epoch r434.microcredits_yield_per_epoch into r448;
    ternary r318 r317.commission r434.commission into r449;
    ternary r318 r317.boost r434.boost into r450;
    cast r444 r445 r446 r447 r448 r449 r450 into r451 as validator_datum;
    ternary r318 true r435 into r452;
    is.eq r451.delegator r42.delegator into r453;
    is.eq r451.validator r42.validator into r454;
    lt r42.block_height r49 into r455;
    lt r451.block_height r49 into r456;
    is.eq r42.microcredits_yield_per_epoch 0u128 into r457;
    is.eq r451.microcredits_yield_per_epoch 0u128 into r458;
    mul r451.boost 10_000u128 into r459;
    div r459 r50[3u32] into r460;
    add r451.microcredits_yield_per_epoch r460 into r461;
    mul r42.boost 10_000u128 into r462;
    div r462 r50[3u32] into r463;
    add r42.microcredits_yield_per_epoch r463 into r464;
    gt r461 r464 into r465;
    lt r461 r464 into r466;
    ternary r454 r465 r466 into r467;
    ternary r467 r42.delegator r451.delegator into r468;
    ternary r467 r42.validator r451.validator into r469;
    ternary r467 r42.block_height r451.block_height into r470;
    ternary r467 r42.bonded_microcredits r451.bonded_microcredits into r471;
    ternary r467 r42.microcredits_yield_per_epoch r451.microcredits_yield_per_epoch into r472;
    ternary r467 r42.commission r451.commission into r473;
    ternary r467 r42.boost r451.boost into r474;
    cast r468 r469 r470 r471 r472 r473 r474 into r475 as validator_datum;
    ternary r467 r451.delegator r42.delegator into r476;
    ternary r467 r451.validator r42.validator into r477;
    ternary r467 r451.block_height r42.block_height into r478;
    ternary r467 r451.bonded_microcredits r42.bonded_microcredits into r479;
    ternary r467 r451.microcredits_yield_per_epoch r42.microcredits_yield_per_epoch into r480;
    ternary r467 r451.commission r42.commission into r481;
    ternary r467 r451.boost r42.boost into r482;
    cast r476 r477 r478 r479 r480 r481 r482 into r483 as validator_datum;
    ternary r467 r454 r454 into r484;
    ternary r458 r42.delegator r475.delegator into r485;
    ternary r458 r42.validator r475.validator into r486;
    ternary r458 r42.block_height r475.block_height into r487;
    ternary r458 r42.bonded_microcredits r475.bonded_microcredits into r488;
    ternary r458 r42.microcredits_yield_per_epoch r475.microcredits_yield_per_epoch into r489;
    ternary r458 r42.commission r475.commission into r490;
    ternary r458 r42.boost r475.boost into r491;
    cast r485 r486 r487 r488 r489 r490 r491 into r492 as validator_datum;
    ternary r458 r451.delegator r483.delegator into r493;
    ternary r458 r451.validator r483.validator into r494;
    ternary r458 r451.block_height r483.block_height into r495;
    ternary r458 r451.bonded_microcredits r483.bonded_microcredits into r496;
    ternary r458 r451.microcredits_yield_per_epoch r483.microcredits_yield_per_epoch into r497;
    ternary r458 r451.commission r483.commission into r498;
    ternary r458 r451.boost r483.boost into r499;
    cast r493 r494 r495 r496 r497 r498 r499 into r500 as validator_datum;
    ternary r458 r454 r484 into r501;
    ternary r457 r451.delegator r492.delegator into r502;
    ternary r457 r451.validator r492.validator into r503;
    ternary r457 r451.block_height r492.block_height into r504;
    ternary r457 r451.bonded_microcredits r492.bonded_microcredits into r505;
    ternary r457 r451.microcredits_yield_per_epoch r492.microcredits_yield_per_epoch into r506;
    ternary r457 r451.commission r492.commission into r507;
    ternary r457 r451.boost r492.boost into r508;
    cast r502 r503 r504 r505 r506 r507 r508 into r509 as validator_datum;
    ternary r457 r42.delegator r500.delegator into r510;
    ternary r457 r42.validator r500.validator into r511;
    ternary r457 r42.block_height r500.block_height into r512;
    ternary r457 r42.bonded_microcredits r500.bonded_microcredits into r513;
    ternary r457 r42.microcredits_yield_per_epoch r500.microcredits_yield_per_epoch into r514;
    ternary r457 r42.commission r500.commission into r515;
    ternary r457 r42.boost r500.boost into r516;
    cast r510 r511 r512 r513 r514 r515 r516 into r517 as validator_datum;
    ternary r457 r454 r501 into r518;
    ternary r456 r42.delegator r509.delegator into r519;
    ternary r456 r42.validator r509.validator into r520;
    ternary r456 r42.block_height r509.block_height into r521;
    ternary r456 r42.bonded_microcredits r509.bonded_microcredits into r522;
    ternary r456 r42.microcredits_yield_per_epoch r509.microcredits_yield_per_epoch into r523;
    ternary r456 r42.commission r509.commission into r524;
    ternary r456 r42.boost r509.boost into r525;
    cast r519 r520 r521 r522 r523 r524 r525 into r526 as validator_datum;
    ternary r456 r451.delegator r517.delegator into r527;
    ternary r456 r451.validator r517.validator into r528;
    ternary r456 r451.block_height r517.block_height into r529;
    ternary r456 r451.bonded_microcredits r517.bonded_microcredits into r530;
    ternary r456 r451.microcredits_yield_per_epoch r517.microcredits_yield_per_epoch into r531;
    ternary r456 r451.commission r517.commission into r532;
    ternary r456 r451.boost r517.boost into r533;
    cast r527 r528 r529 r530 r531 r532 r533 into r534 as validator_datum;
    ternary r456 r454 r518 into r535;
    ternary r455 r451.delegator r526.delegator into r536;
    ternary r455 r451.validator r526.validator into r537;
    ternary r455 r451.block_height r526.block_height into r538;
    ternary r455 r451.bonded_microcredits r526.bonded_microcredits into r539;
    ternary r455 r451.microcredits_yield_per_epoch r526.microcredits_yield_per_epoch into r540;
    ternary r455 r451.commission r526.commission into r541;
    ternary r455 r451.boost r526.boost into r542;
    cast r536 r537 r538 r539 r540 r541 r542 into r543 as validator_datum;
    ternary r455 r42.delegator r534.delegator into r544;
    ternary r455 r42.validator r534.validator into r545;
    ternary r455 r42.block_height r534.block_height into r546;
    ternary r455 r42.bonded_microcredits r534.bonded_microcredits into r547;
    ternary r455 r42.microcredits_yield_per_epoch r534.microcredits_yield_per_epoch into r548;
    ternary r455 r42.commission r534.commission into r549;
    ternary r455 r42.boost r534.boost into r550;
    cast r544 r545 r546 r547 r548 r549 r550 into r551 as validator_datum;
    ternary r455 r454 r535 into r552;
    ternary r453 r451.delegator r543.delegator into r553;
    ternary r453 r451.validator r543.validator into r554;
    ternary r453 r451.block_height r543.block_height into r555;
    ternary r453 r451.bonded_microcredits r543.bonded_microcredits into r556;
    ternary r453 r451.microcredits_yield_per_epoch r543.microcredits_yield_per_epoch into r557;
    ternary r453 r451.commission r543.commission into r558;
    ternary r453 r451.boost r543.boost into r559;
    cast r553 r554 r555 r556 r557 r558 r559 into r560 as validator_datum;
    ternary r453 r42.delegator r551.delegator into r561;
    ternary r453 r42.validator r551.validator into r562;
    ternary r453 r42.block_height r551.block_height into r563;
    ternary r453 r42.bonded_microcredits r551.bonded_microcredits into r564;
    ternary r453 r42.microcredits_yield_per_epoch r551.microcredits_yield_per_epoch into r565;
    ternary r453 r42.commission r551.commission into r566;
    ternary r453 r42.boost r551.boost into r567;
    cast r561 r562 r563 r564 r565 r566 r567 into r568 as validator_datum;
    ternary r453 true r552 into r569;
    ternary r452 r42.delegator r560.delegator into r570;
    ternary r452 r42.validator r560.validator into r571;
    ternary r452 r42.block_height r560.block_height into r572;
    ternary r452 r42.bonded_microcredits r560.bonded_microcredits into r573;
    ternary r452 r42.microcredits_yield_per_epoch r560.microcredits_yield_per_epoch into r574;
    ternary r452 r42.commission r560.commission into r575;
    ternary r452 r42.boost r560.boost into r576;
    cast r570 r571 r572 r573 r574 r575 r576 into r577 as validator_datum;
    ternary r452 r451.delegator r568.delegator into r578;
    ternary r452 r451.validator r568.validator into r579;
    ternary r452 r451.block_height r568.block_height into r580;
    ternary r452 r451.bonded_microcredits r568.bonded_microcredits into r581;
    ternary r452 r451.microcredits_yield_per_epoch r568.microcredits_yield_per_epoch into r582;
    ternary r452 r451.commission r568.commission into r583;
    ternary r452 r451.boost r568.boost into r584;
    cast r578 r579 r580 r581 r582 r583 r584 into r585 as validator_datum;
    ternary r452 true r569 into r586;
    is.eq r585.delegator r43.delegator into r587;
    is.eq r585.validator r43.validator into r588;
    lt r43.block_height r49 into r589;
    lt r585.block_height r49 into r590;
    is.eq r43.microcredits_yield_per_epoch 0u128 into r591;
    is.eq r585.microcredits_yield_per_epoch 0u128 into r592;
    mul r585.boost 10_000u128 into r593;
    div r593 r50[4u32] into r594;
    add r585.microcredits_yield_per_epoch r594 into r595;
    mul r43.boost 10_000u128 into r596;
    div r596 r50[4u32] into r597;
    add r43.microcredits_yield_per_epoch r597 into r598;
    gt r595 r598 into r599;
    lt r595 r598 into r600;
    ternary r588 r599 r600 into r601;
    ternary r601 r43.delegator r585.delegator into r602;
    ternary r601 r43.validator r585.validator into r603;
    ternary r601 r43.block_height r585.block_height into r604;
    ternary r601 r43.bonded_microcredits r585.bonded_microcredits into r605;
    ternary r601 r43.microcredits_yield_per_epoch r585.microcredits_yield_per_epoch into r606;
    ternary r601 r43.commission r585.commission into r607;
    ternary r601 r43.boost r585.boost into r608;
    cast r602 r603 r604 r605 r606 r607 r608 into r609 as validator_datum;
    ternary r601 r585.delegator r43.delegator into r610;
    ternary r601 r585.validator r43.validator into r611;
    ternary r601 r585.block_height r43.block_height into r612;
    ternary r601 r585.bonded_microcredits r43.bonded_microcredits into r613;
    ternary r601 r585.microcredits_yield_per_epoch r43.microcredits_yield_per_epoch into r614;
    ternary r601 r585.commission r43.commission into r615;
    ternary r601 r585.boost r43.boost into r616;
    cast r610 r611 r612 r613 r614 r615 r616 into r617 as validator_datum;
    ternary r601 r588 r588 into r618;
    ternary r592 r43.delegator r609.delegator into r619;
    ternary r592 r43.validator r609.validator into r620;
    ternary r592 r43.block_height r609.block_height into r621;
    ternary r592 r43.bonded_microcredits r609.bonded_microcredits into r622;
    ternary r592 r43.microcredits_yield_per_epoch r609.microcredits_yield_per_epoch into r623;
    ternary r592 r43.commission r609.commission into r624;
    ternary r592 r43.boost r609.boost into r625;
    cast r619 r620 r621 r622 r623 r624 r625 into r626 as validator_datum;
    ternary r592 r585.delegator r617.delegator into r627;
    ternary r592 r585.validator r617.validator into r628;
    ternary r592 r585.block_height r617.block_height into r629;
    ternary r592 r585.bonded_microcredits r617.bonded_microcredits into r630;
    ternary r592 r585.microcredits_yield_per_epoch r617.microcredits_yield_per_epoch into r631;
    ternary r592 r585.commission r617.commission into r632;
    ternary r592 r585.boost r617.boost into r633;
    cast r627 r628 r629 r630 r631 r632 r633 into r634 as validator_datum;
    ternary r592 r588 r618 into r635;
    ternary r591 r585.delegator r626.delegator into r636;
    ternary r591 r585.validator r626.validator into r637;
    ternary r591 r585.block_height r626.block_height into r638;
    ternary r591 r585.bonded_microcredits r626.bonded_microcredits into r639;
    ternary r591 r585.microcredits_yield_per_epoch r626.microcredits_yield_per_epoch into r640;
    ternary r591 r585.commission r626.commission into r641;
    ternary r591 r585.boost r626.boost into r642;
    cast r636 r637 r638 r639 r640 r641 r642 into r643 as validator_datum;
    ternary r591 r43.delegator r634.delegator into r644;
    ternary r591 r43.validator r634.validator into r645;
    ternary r591 r43.block_height r634.block_height into r646;
    ternary r591 r43.bonded_microcredits r634.bonded_microcredits into r647;
    ternary r591 r43.microcredits_yield_per_epoch r634.microcredits_yield_per_epoch into r648;
    ternary r591 r43.commission r634.commission into r649;
    ternary r591 r43.boost r634.boost into r650;
    cast r644 r645 r646 r647 r648 r649 r650 into r651 as validator_datum;
    ternary r591 r588 r635 into r652;
    ternary r590 r43.delegator r643.delegator into r653;
    ternary r590 r43.validator r643.validator into r654;
    ternary r590 r43.block_height r643.block_height into r655;
    ternary r590 r43.bonded_microcredits r643.bonded_microcredits into r656;
    ternary r590 r43.microcredits_yield_per_epoch r643.microcredits_yield_per_epoch into r657;
    ternary r590 r43.commission r643.commission into r658;
    ternary r590 r43.boost r643.boost into r659;
    cast r653 r654 r655 r656 r657 r658 r659 into r660 as validator_datum;
    ternary r590 r585.delegator r651.delegator into r661;
    ternary r590 r585.validator r651.validator into r662;
    ternary r590 r585.block_height r651.block_height into r663;
    ternary r590 r585.bonded_microcredits r651.bonded_microcredits into r664;
    ternary r590 r585.microcredits_yield_per_epoch r651.microcredits_yield_per_epoch into r665;
    ternary r590 r585.commission r651.commission into r666;
    ternary r590 r585.boost r651.boost into r667;
    cast r661 r662 r663 r664 r665 r666 r667 into r668 as validator_datum;
    ternary r590 r588 r652 into r669;
    ternary r589 r585.delegator r660.delegator into r670;
    ternary r589 r585.validator r660.validator into r671;
    ternary r589 r585.block_height r660.block_height into r672;
    ternary r589 r585.bonded_microcredits r660.bonded_microcredits into r673;
    ternary r589 r585.microcredits_yield_per_epoch r660.microcredits_yield_per_epoch into r674;
    ternary r589 r585.commission r660.commission into r675;
    ternary r589 r585.boost r660.boost into r676;
    cast r670 r671 r672 r673 r674 r675 r676 into r677 as validator_datum;
    ternary r589 r43.delegator r668.delegator into r678;
    ternary r589 r43.validator r668.validator into r679;
    ternary r589 r43.block_height r668.block_height into r680;
    ternary r589 r43.bonded_microcredits r668.bonded_microcredits into r681;
    ternary r589 r43.microcredits_yield_per_epoch r668.microcredits_yield_per_epoch into r682;
    ternary r589 r43.commission r668.commission into r683;
    ternary r589 r43.boost r668.boost into r684;
    cast r678 r679 r680 r681 r682 r683 r684 into r685 as validator_datum;
    ternary r589 r588 r669 into r686;
    ternary r587 r585.delegator r677.delegator into r687;
    ternary r587 r585.validator r677.validator into r688;
    ternary r587 r585.block_height r677.block_height into r689;
    ternary r587 r585.bonded_microcredits r677.bonded_microcredits into r690;
    ternary r587 r585.microcredits_yield_per_epoch r677.microcredits_yield_per_epoch into r691;
    ternary r587 r585.commission r677.commission into r692;
    ternary r587 r585.boost r677.boost into r693;
    cast r687 r688 r689 r690 r691 r692 r693 into r694 as validator_datum;
    ternary r587 r43.delegator r685.delegator into r695;
    ternary r587 r43.validator r685.validator into r696;
    ternary r587 r43.block_height r685.block_height into r697;
    ternary r587 r43.bonded_microcredits r685.bonded_microcredits into r698;
    ternary r587 r43.microcredits_yield_per_epoch r685.microcredits_yield_per_epoch into r699;
    ternary r587 r43.commission r685.commission into r700;
    ternary r587 r43.boost r685.boost into r701;
    cast r695 r696 r697 r698 r699 r700 r701 into r702 as validator_datum;
    ternary r587 true r686 into r703;
    ternary r586 r43.delegator r694.delegator into r704;
    ternary r586 r43.validator r694.validator into r705;
    ternary r586 r43.block_height r694.block_height into r706;
    ternary r586 r43.bonded_microcredits r694.bonded_microcredits into r707;
    ternary r586 r43.microcredits_yield_per_epoch r694.microcredits_yield_per_epoch into r708;
    ternary r586 r43.commission r694.commission into r709;
    ternary r586 r43.boost r694.boost into r710;
    cast r704 r705 r706 r707 r708 r709 r710 into r711 as validator_datum;
    ternary r586 r585.delegator r702.delegator into r712;
    ternary r586 r585.validator r702.validator into r713;
    ternary r586 r585.block_height r702.block_height into r714;
    ternary r586 r585.bonded_microcredits r702.bonded_microcredits into r715;
    ternary r586 r585.microcredits_yield_per_epoch r702.microcredits_yield_per_epoch into r716;
    ternary r586 r585.commission r702.commission into r717;
    ternary r586 r585.boost r702.boost into r718;
    cast r712 r713 r714 r715 r716 r717 r718 into r719 as validator_datum;
    ternary r586 true r703 into r720;
    is.eq r719.delegator r44.delegator into r721;
    is.eq r719.validator r44.validator into r722;
    lt r44.block_height r49 into r723;
    lt r719.block_height r49 into r724;
    is.eq r44.microcredits_yield_per_epoch 0u128 into r725;
    is.eq r719.microcredits_yield_per_epoch 0u128 into r726;
    mul r719.boost 10_000u128 into r727;
    div r727 r50[5u32] into r728;
    add r719.microcredits_yield_per_epoch r728 into r729;
    mul r44.boost 10_000u128 into r730;
    div r730 r50[5u32] into r731;
    add r44.microcredits_yield_per_epoch r731 into r732;
    gt r729 r732 into r733;
    lt r729 r732 into r734;
    ternary r722 r733 r734 into r735;
    ternary r735 r44.delegator r719.delegator into r736;
    ternary r735 r44.validator r719.validator into r737;
    ternary r735 r44.block_height r719.block_height into r738;
    ternary r735 r44.bonded_microcredits r719.bonded_microcredits into r739;
    ternary r735 r44.microcredits_yield_per_epoch r719.microcredits_yield_per_epoch into r740;
    ternary r735 r44.commission r719.commission into r741;
    ternary r735 r44.boost r719.boost into r742;
    cast r736 r737 r738 r739 r740 r741 r742 into r743 as validator_datum;
    ternary r735 r719.delegator r44.delegator into r744;
    ternary r735 r719.validator r44.validator into r745;
    ternary r735 r719.block_height r44.block_height into r746;
    ternary r735 r719.bonded_microcredits r44.bonded_microcredits into r747;
    ternary r735 r719.microcredits_yield_per_epoch r44.microcredits_yield_per_epoch into r748;
    ternary r735 r719.commission r44.commission into r749;
    ternary r735 r719.boost r44.boost into r750;
    cast r744 r745 r746 r747 r748 r749 r750 into r751 as validator_datum;
    ternary r735 r722 r722 into r752;
    ternary r726 r44.delegator r743.delegator into r753;
    ternary r726 r44.validator r743.validator into r754;
    ternary r726 r44.block_height r743.block_height into r755;
    ternary r726 r44.bonded_microcredits r743.bonded_microcredits into r756;
    ternary r726 r44.microcredits_yield_per_epoch r743.microcredits_yield_per_epoch into r757;
    ternary r726 r44.commission r743.commission into r758;
    ternary r726 r44.boost r743.boost into r759;
    cast r753 r754 r755 r756 r757 r758 r759 into r760 as validator_datum;
    ternary r726 r719.delegator r751.delegator into r761;
    ternary r726 r719.validator r751.validator into r762;
    ternary r726 r719.block_height r751.block_height into r763;
    ternary r726 r719.bonded_microcredits r751.bonded_microcredits into r764;
    ternary r726 r719.microcredits_yield_per_epoch r751.microcredits_yield_per_epoch into r765;
    ternary r726 r719.commission r751.commission into r766;
    ternary r726 r719.boost r751.boost into r767;
    cast r761 r762 r763 r764 r765 r766 r767 into r768 as validator_datum;
    ternary r726 r722 r752 into r769;
    ternary r725 r719.delegator r760.delegator into r770;
    ternary r725 r719.validator r760.validator into r771;
    ternary r725 r719.block_height r760.block_height into r772;
    ternary r725 r719.bonded_microcredits r760.bonded_microcredits into r773;
    ternary r725 r719.microcredits_yield_per_epoch r760.microcredits_yield_per_epoch into r774;
    ternary r725 r719.commission r760.commission into r775;
    ternary r725 r719.boost r760.boost into r776;
    cast r770 r771 r772 r773 r774 r775 r776 into r777 as validator_datum;
    ternary r725 r44.delegator r768.delegator into r778;
    ternary r725 r44.validator r768.validator into r779;
    ternary r725 r44.block_height r768.block_height into r780;
    ternary r725 r44.bonded_microcredits r768.bonded_microcredits into r781;
    ternary r725 r44.microcredits_yield_per_epoch r768.microcredits_yield_per_epoch into r782;
    ternary r725 r44.commission r768.commission into r783;
    ternary r725 r44.boost r768.boost into r784;
    cast r778 r779 r780 r781 r782 r783 r784 into r785 as validator_datum;
    ternary r725 r722 r769 into r786;
    ternary r724 r44.delegator r777.delegator into r787;
    ternary r724 r44.validator r777.validator into r788;
    ternary r724 r44.block_height r777.block_height into r789;
    ternary r724 r44.bonded_microcredits r777.bonded_microcredits into r790;
    ternary r724 r44.microcredits_yield_per_epoch r777.microcredits_yield_per_epoch into r791;
    ternary r724 r44.commission r777.commission into r792;
    ternary r724 r44.boost r777.boost into r793;
    cast r787 r788 r789 r790 r791 r792 r793 into r794 as validator_datum;
    ternary r724 r719.delegator r785.delegator into r795;
    ternary r724 r719.validator r785.validator into r796;
    ternary r724 r719.block_height r785.block_height into r797;
    ternary r724 r719.bonded_microcredits r785.bonded_microcredits into r798;
    ternary r724 r719.microcredits_yield_per_epoch r785.microcredits_yield_per_epoch into r799;
    ternary r724 r719.commission r785.commission into r800;
    ternary r724 r719.boost r785.boost into r801;
    cast r795 r796 r797 r798 r799 r800 r801 into r802 as validator_datum;
    ternary r724 r722 r786 into r803;
    ternary r723 r719.delegator r794.delegator into r804;
    ternary r723 r719.validator r794.validator into r805;
    ternary r723 r719.block_height r794.block_height into r806;
    ternary r723 r719.bonded_microcredits r794.bonded_microcredits into r807;
    ternary r723 r719.microcredits_yield_per_epoch r794.microcredits_yield_per_epoch into r808;
    ternary r723 r719.commission r794.commission into r809;
    ternary r723 r719.boost r794.boost into r810;
    cast r804 r805 r806 r807 r808 r809 r810 into r811 as validator_datum;
    ternary r723 r44.delegator r802.delegator into r812;
    ternary r723 r44.validator r802.validator into r813;
    ternary r723 r44.block_height r802.block_height into r814;
    ternary r723 r44.bonded_microcredits r802.bonded_microcredits into r815;
    ternary r723 r44.microcredits_yield_per_epoch r802.microcredits_yield_per_epoch into r816;
    ternary r723 r44.commission r802.commission into r817;
    ternary r723 r44.boost r802.boost into r818;
    cast r812 r813 r814 r815 r816 r817 r818 into r819 as validator_datum;
    ternary r723 r722 r803 into r820;
    ternary r721 r719.delegator r811.delegator into r821;
    ternary r721 r719.validator r811.validator into r822;
    ternary r721 r719.block_height r811.block_height into r823;
    ternary r721 r719.bonded_microcredits r811.bonded_microcredits into r824;
    ternary r721 r719.microcredits_yield_per_epoch r811.microcredits_yield_per_epoch into r825;
    ternary r721 r719.commission r811.commission into r826;
    ternary r721 r719.boost r811.boost into r827;
    cast r821 r822 r823 r824 r825 r826 r827 into r828 as validator_datum;
    ternary r721 r44.delegator r819.delegator into r829;
    ternary r721 r44.validator r819.validator into r830;
    ternary r721 r44.block_height r819.block_height into r831;
    ternary r721 r44.bonded_microcredits r819.bonded_microcredits into r832;
    ternary r721 r44.microcredits_yield_per_epoch r819.microcredits_yield_per_epoch into r833;
    ternary r721 r44.commission r819.commission into r834;
    ternary r721 r44.boost r819.boost into r835;
    cast r829 r830 r831 r832 r833 r834 r835 into r836 as validator_datum;
    ternary r721 true r820 into r837;
    ternary r720 r44.delegator r828.delegator into r838;
    ternary r720 r44.validator r828.validator into r839;
    ternary r720 r44.block_height r828.block_height into r840;
    ternary r720 r44.bonded_microcredits r828.bonded_microcredits into r841;
    ternary r720 r44.microcredits_yield_per_epoch r828.microcredits_yield_per_epoch into r842;
    ternary r720 r44.commission r828.commission into r843;
    ternary r720 r44.boost r828.boost into r844;
    cast r838 r839 r840 r841 r842 r843 r844 into r845 as validator_datum;
    ternary r720 r719.delegator r836.delegator into r846;
    ternary r720 r719.validator r836.validator into r847;
    ternary r720 r719.block_height r836.block_height into r848;
    ternary r720 r719.bonded_microcredits r836.bonded_microcredits into r849;
    ternary r720 r719.microcredits_yield_per_epoch r836.microcredits_yield_per_epoch into r850;
    ternary r720 r719.commission r836.commission into r851;
    ternary r720 r719.boost r836.boost into r852;
    cast r846 r847 r848 r849 r850 r851 r852 into r853 as validator_datum;
    ternary r720 true r837 into r854;
    is.eq r853.delegator r45.delegator into r855;
    is.eq r853.validator r45.validator into r856;
    lt r45.block_height r49 into r857;
    lt r853.block_height r49 into r858;
    is.eq r45.microcredits_yield_per_epoch 0u128 into r859;
    is.eq r853.microcredits_yield_per_epoch 0u128 into r860;
    mul r853.boost 10_000u128 into r861;
    div r861 r50[6u32] into r862;
    add r853.microcredits_yield_per_epoch r862 into r863;
    mul r45.boost 10_000u128 into r864;
    div r864 r50[6u32] into r865;
    add r45.microcredits_yield_per_epoch r865 into r866;
    gt r863 r866 into r867;
    lt r863 r866 into r868;
    ternary r856 r867 r868 into r869;
    ternary r869 r45.delegator r853.delegator into r870;
    ternary r869 r45.validator r853.validator into r871;
    ternary r869 r45.block_height r853.block_height into r872;
    ternary r869 r45.bonded_microcredits r853.bonded_microcredits into r873;
    ternary r869 r45.microcredits_yield_per_epoch r853.microcredits_yield_per_epoch into r874;
    ternary r869 r45.commission r853.commission into r875;
    ternary r869 r45.boost r853.boost into r876;
    cast r870 r871 r872 r873 r874 r875 r876 into r877 as validator_datum;
    ternary r869 r853.delegator r45.delegator into r878;
    ternary r869 r853.validator r45.validator into r879;
    ternary r869 r853.block_height r45.block_height into r880;
    ternary r869 r853.bonded_microcredits r45.bonded_microcredits into r881;
    ternary r869 r853.microcredits_yield_per_epoch r45.microcredits_yield_per_epoch into r882;
    ternary r869 r853.commission r45.commission into r883;
    ternary r869 r853.boost r45.boost into r884;
    cast r878 r879 r880 r881 r882 r883 r884 into r885 as validator_datum;
    ternary r869 r856 r856 into r886;
    ternary r860 r45.delegator r877.delegator into r887;
    ternary r860 r45.validator r877.validator into r888;
    ternary r860 r45.block_height r877.block_height into r889;
    ternary r860 r45.bonded_microcredits r877.bonded_microcredits into r890;
    ternary r860 r45.microcredits_yield_per_epoch r877.microcredits_yield_per_epoch into r891;
    ternary r860 r45.commission r877.commission into r892;
    ternary r860 r45.boost r877.boost into r893;
    cast r887 r888 r889 r890 r891 r892 r893 into r894 as validator_datum;
    ternary r860 r853.delegator r885.delegator into r895;
    ternary r860 r853.validator r885.validator into r896;
    ternary r860 r853.block_height r885.block_height into r897;
    ternary r860 r853.bonded_microcredits r885.bonded_microcredits into r898;
    ternary r860 r853.microcredits_yield_per_epoch r885.microcredits_yield_per_epoch into r899;
    ternary r860 r853.commission r885.commission into r900;
    ternary r860 r853.boost r885.boost into r901;
    cast r895 r896 r897 r898 r899 r900 r901 into r902 as validator_datum;
    ternary r860 r856 r886 into r903;
    ternary r859 r853.delegator r894.delegator into r904;
    ternary r859 r853.validator r894.validator into r905;
    ternary r859 r853.block_height r894.block_height into r906;
    ternary r859 r853.bonded_microcredits r894.bonded_microcredits into r907;
    ternary r859 r853.microcredits_yield_per_epoch r894.microcredits_yield_per_epoch into r908;
    ternary r859 r853.commission r894.commission into r909;
    ternary r859 r853.boost r894.boost into r910;
    cast r904 r905 r906 r907 r908 r909 r910 into r911 as validator_datum;
    ternary r859 r45.delegator r902.delegator into r912;
    ternary r859 r45.validator r902.validator into r913;
    ternary r859 r45.block_height r902.block_height into r914;
    ternary r859 r45.bonded_microcredits r902.bonded_microcredits into r915;
    ternary r859 r45.microcredits_yield_per_epoch r902.microcredits_yield_per_epoch into r916;
    ternary r859 r45.commission r902.commission into r917;
    ternary r859 r45.boost r902.boost into r918;
    cast r912 r913 r914 r915 r916 r917 r918 into r919 as validator_datum;
    ternary r859 r856 r903 into r920;
    ternary r858 r45.delegator r911.delegator into r921;
    ternary r858 r45.validator r911.validator into r922;
    ternary r858 r45.block_height r911.block_height into r923;
    ternary r858 r45.bonded_microcredits r911.bonded_microcredits into r924;
    ternary r858 r45.microcredits_yield_per_epoch r911.microcredits_yield_per_epoch into r925;
    ternary r858 r45.commission r911.commission into r926;
    ternary r858 r45.boost r911.boost into r927;
    cast r921 r922 r923 r924 r925 r926 r927 into r928 as validator_datum;
    ternary r858 r853.delegator r919.delegator into r929;
    ternary r858 r853.validator r919.validator into r930;
    ternary r858 r853.block_height r919.block_height into r931;
    ternary r858 r853.bonded_microcredits r919.bonded_microcredits into r932;
    ternary r858 r853.microcredits_yield_per_epoch r919.microcredits_yield_per_epoch into r933;
    ternary r858 r853.commission r919.commission into r934;
    ternary r858 r853.boost r919.boost into r935;
    cast r929 r930 r931 r932 r933 r934 r935 into r936 as validator_datum;
    ternary r858 r856 r920 into r937;
    ternary r857 r853.delegator r928.delegator into r938;
    ternary r857 r853.validator r928.validator into r939;
    ternary r857 r853.block_height r928.block_height into r940;
    ternary r857 r853.bonded_microcredits r928.bonded_microcredits into r941;
    ternary r857 r853.microcredits_yield_per_epoch r928.microcredits_yield_per_epoch into r942;
    ternary r857 r853.commission r928.commission into r943;
    ternary r857 r853.boost r928.boost into r944;
    cast r938 r939 r940 r941 r942 r943 r944 into r945 as validator_datum;
    ternary r857 r45.delegator r936.delegator into r946;
    ternary r857 r45.validator r936.validator into r947;
    ternary r857 r45.block_height r936.block_height into r948;
    ternary r857 r45.bonded_microcredits r936.bonded_microcredits into r949;
    ternary r857 r45.microcredits_yield_per_epoch r936.microcredits_yield_per_epoch into r950;
    ternary r857 r45.commission r936.commission into r951;
    ternary r857 r45.boost r936.boost into r952;
    cast r946 r947 r948 r949 r950 r951 r952 into r953 as validator_datum;
    ternary r857 r856 r937 into r954;
    ternary r855 r853.delegator r945.delegator into r955;
    ternary r855 r853.validator r945.validator into r956;
    ternary r855 r853.block_height r945.block_height into r957;
    ternary r855 r853.bonded_microcredits r945.bonded_microcredits into r958;
    ternary r855 r853.microcredits_yield_per_epoch r945.microcredits_yield_per_epoch into r959;
    ternary r855 r853.commission r945.commission into r960;
    ternary r855 r853.boost r945.boost into r961;
    cast r955 r956 r957 r958 r959 r960 r961 into r962 as validator_datum;
    ternary r855 r45.delegator r953.delegator into r963;
    ternary r855 r45.validator r953.validator into r964;
    ternary r855 r45.block_height r953.block_height into r965;
    ternary r855 r45.bonded_microcredits r953.bonded_microcredits into r966;
    ternary r855 r45.microcredits_yield_per_epoch r953.microcredits_yield_per_epoch into r967;
    ternary r855 r45.commission r953.commission into r968;
    ternary r855 r45.boost r953.boost into r969;
    cast r963 r964 r965 r966 r967 r968 r969 into r970 as validator_datum;
    ternary r855 true r954 into r971;
    ternary r854 r45.delegator r962.delegator into r972;
    ternary r854 r45.validator r962.validator into r973;
    ternary r854 r45.block_height r962.block_height into r974;
    ternary r854 r45.bonded_microcredits r962.bonded_microcredits into r975;
    ternary r854 r45.microcredits_yield_per_epoch r962.microcredits_yield_per_epoch into r976;
    ternary r854 r45.commission r962.commission into r977;
    ternary r854 r45.boost r962.boost into r978;
    cast r972 r973 r974 r975 r976 r977 r978 into r979 as validator_datum;
    ternary r854 r853.delegator r970.delegator into r980;
    ternary r854 r853.validator r970.validator into r981;
    ternary r854 r853.block_height r970.block_height into r982;
    ternary r854 r853.bonded_microcredits r970.bonded_microcredits into r983;
    ternary r854 r853.microcredits_yield_per_epoch r970.microcredits_yield_per_epoch into r984;
    ternary r854 r853.commission r970.commission into r985;
    ternary r854 r853.boost r970.boost into r986;
    cast r980 r981 r982 r983 r984 r985 r986 into r987 as validator_datum;
    ternary r854 true r971 into r988;
    is.eq r987.delegator r46.delegator into r989;
    is.eq r987.validator r46.validator into r990;
    lt r46.block_height r49 into r991;
    lt r987.block_height r49 into r992;
    is.eq r46.microcredits_yield_per_epoch 0u128 into r993;
    is.eq r987.microcredits_yield_per_epoch 0u128 into r994;
    mul r987.boost 10_000u128 into r995;
    div r995 r50[7u32] into r996;
    add r987.microcredits_yield_per_epoch r996 into r997;
    mul r46.boost 10_000u128 into r998;
    div r998 r50[7u32] into r999;
    add r46.microcredits_yield_per_epoch r999 into r1000;
    gt r997 r1000 into r1001;
    lt r997 r1000 into r1002;
    ternary r990 r1001 r1002 into r1003;
    ternary r1003 r46.delegator r987.delegator into r1004;
    ternary r1003 r46.validator r987.validator into r1005;
    ternary r1003 r46.block_height r987.block_height into r1006;
    ternary r1003 r46.bonded_microcredits r987.bonded_microcredits into r1007;
    ternary r1003 r46.microcredits_yield_per_epoch r987.microcredits_yield_per_epoch into r1008;
    ternary r1003 r46.commission r987.commission into r1009;
    ternary r1003 r46.boost r987.boost into r1010;
    cast r1004 r1005 r1006 r1007 r1008 r1009 r1010 into r1011 as validator_datum;
    ternary r1003 r987.delegator r46.delegator into r1012;
    ternary r1003 r987.validator r46.validator into r1013;
    ternary r1003 r987.block_height r46.block_height into r1014;
    ternary r1003 r987.bonded_microcredits r46.bonded_microcredits into r1015;
    ternary r1003 r987.microcredits_yield_per_epoch r46.microcredits_yield_per_epoch into r1016;
    ternary r1003 r987.commission r46.commission into r1017;
    ternary r1003 r987.boost r46.boost into r1018;
    cast r1012 r1013 r1014 r1015 r1016 r1017 r1018 into r1019 as validator_datum;
    ternary r1003 r990 r990 into r1020;
    ternary r994 r46.delegator r1011.delegator into r1021;
    ternary r994 r46.validator r1011.validator into r1022;
    ternary r994 r46.block_height r1011.block_height into r1023;
    ternary r994 r46.bonded_microcredits r1011.bonded_microcredits into r1024;
    ternary r994 r46.microcredits_yield_per_epoch r1011.microcredits_yield_per_epoch into r1025;
    ternary r994 r46.commission r1011.commission into r1026;
    ternary r994 r46.boost r1011.boost into r1027;
    cast r1021 r1022 r1023 r1024 r1025 r1026 r1027 into r1028 as validator_datum;
    ternary r994 r987.delegator r1019.delegator into r1029;
    ternary r994 r987.validator r1019.validator into r1030;
    ternary r994 r987.block_height r1019.block_height into r1031;
    ternary r994 r987.bonded_microcredits r1019.bonded_microcredits into r1032;
    ternary r994 r987.microcredits_yield_per_epoch r1019.microcredits_yield_per_epoch into r1033;
    ternary r994 r987.commission r1019.commission into r1034;
    ternary r994 r987.boost r1019.boost into r1035;
    cast r1029 r1030 r1031 r1032 r1033 r1034 r1035 into r1036 as validator_datum;
    ternary r994 r990 r1020 into r1037;
    ternary r993 r987.delegator r1028.delegator into r1038;
    ternary r993 r987.validator r1028.validator into r1039;
    ternary r993 r987.block_height r1028.block_height into r1040;
    ternary r993 r987.bonded_microcredits r1028.bonded_microcredits into r1041;
    ternary r993 r987.microcredits_yield_per_epoch r1028.microcredits_yield_per_epoch into r1042;
    ternary r993 r987.commission r1028.commission into r1043;
    ternary r993 r987.boost r1028.boost into r1044;
    cast r1038 r1039 r1040 r1041 r1042 r1043 r1044 into r1045 as validator_datum;
    ternary r993 r46.delegator r1036.delegator into r1046;
    ternary r993 r46.validator r1036.validator into r1047;
    ternary r993 r46.block_height r1036.block_height into r1048;
    ternary r993 r46.bonded_microcredits r1036.bonded_microcredits into r1049;
    ternary r993 r46.microcredits_yield_per_epoch r1036.microcredits_yield_per_epoch into r1050;
    ternary r993 r46.commission r1036.commission into r1051;
    ternary r993 r46.boost r1036.boost into r1052;
    cast r1046 r1047 r1048 r1049 r1050 r1051 r1052 into r1053 as validator_datum;
    ternary r993 r990 r1037 into r1054;
    ternary r992 r46.delegator r1045.delegator into r1055;
    ternary r992 r46.validator r1045.validator into r1056;
    ternary r992 r46.block_height r1045.block_height into r1057;
    ternary r992 r46.bonded_microcredits r1045.bonded_microcredits into r1058;
    ternary r992 r46.microcredits_yield_per_epoch r1045.microcredits_yield_per_epoch into r1059;
    ternary r992 r46.commission r1045.commission into r1060;
    ternary r992 r46.boost r1045.boost into r1061;
    cast r1055 r1056 r1057 r1058 r1059 r1060 r1061 into r1062 as validator_datum;
    ternary r992 r987.delegator r1053.delegator into r1063;
    ternary r992 r987.validator r1053.validator into r1064;
    ternary r992 r987.block_height r1053.block_height into r1065;
    ternary r992 r987.bonded_microcredits r1053.bonded_microcredits into r1066;
    ternary r992 r987.microcredits_yield_per_epoch r1053.microcredits_yield_per_epoch into r1067;
    ternary r992 r987.commission r1053.commission into r1068;
    ternary r992 r987.boost r1053.boost into r1069;
    cast r1063 r1064 r1065 r1066 r1067 r1068 r1069 into r1070 as validator_datum;
    ternary r992 r990 r1054 into r1071;
    ternary r991 r987.delegator r1062.delegator into r1072;
    ternary r991 r987.validator r1062.validator into r1073;
    ternary r991 r987.block_height r1062.block_height into r1074;
    ternary r991 r987.bonded_microcredits r1062.bonded_microcredits into r1075;
    ternary r991 r987.microcredits_yield_per_epoch r1062.microcredits_yield_per_epoch into r1076;
    ternary r991 r987.commission r1062.commission into r1077;
    ternary r991 r987.boost r1062.boost into r1078;
    cast r1072 r1073 r1074 r1075 r1076 r1077 r1078 into r1079 as validator_datum;
    ternary r991 r46.delegator r1070.delegator into r1080;
    ternary r991 r46.validator r1070.validator into r1081;
    ternary r991 r46.block_height r1070.block_height into r1082;
    ternary r991 r46.bonded_microcredits r1070.bonded_microcredits into r1083;
    ternary r991 r46.microcredits_yield_per_epoch r1070.microcredits_yield_per_epoch into r1084;
    ternary r991 r46.commission r1070.commission into r1085;
    ternary r991 r46.boost r1070.boost into r1086;
    cast r1080 r1081 r1082 r1083 r1084 r1085 r1086 into r1087 as validator_datum;
    ternary r991 r990 r1071 into r1088;
    ternary r989 r987.delegator r1079.delegator into r1089;
    ternary r989 r987.validator r1079.validator into r1090;
    ternary r989 r987.block_height r1079.block_height into r1091;
    ternary r989 r987.bonded_microcredits r1079.bonded_microcredits into r1092;
    ternary r989 r987.microcredits_yield_per_epoch r1079.microcredits_yield_per_epoch into r1093;
    ternary r989 r987.commission r1079.commission into r1094;
    ternary r989 r987.boost r1079.boost into r1095;
    cast r1089 r1090 r1091 r1092 r1093 r1094 r1095 into r1096 as validator_datum;
    ternary r989 r46.delegator r1087.delegator into r1097;
    ternary r989 r46.validator r1087.validator into r1098;
    ternary r989 r46.block_height r1087.block_height into r1099;
    ternary r989 r46.bonded_microcredits r1087.bonded_microcredits into r1100;
    ternary r989 r46.microcredits_yield_per_epoch r1087.microcredits_yield_per_epoch into r1101;
    ternary r989 r46.commission r1087.commission into r1102;
    ternary r989 r46.boost r1087.boost into r1103;
    cast r1097 r1098 r1099 r1100 r1101 r1102 r1103 into r1104 as validator_datum;
    ternary r989 true r1088 into r1105;
    ternary r988 r46.delegator r1096.delegator into r1106;
    ternary r988 r46.validator r1096.validator into r1107;
    ternary r988 r46.block_height r1096.block_height into r1108;
    ternary r988 r46.bonded_microcredits r1096.bonded_microcredits into r1109;
    ternary r988 r46.microcredits_yield_per_epoch r1096.microcredits_yield_per_epoch into r1110;
    ternary r988 r46.commission r1096.commission into r1111;
    ternary r988 r46.boost r1096.boost into r1112;
    cast r1106 r1107 r1108 r1109 r1110 r1111 r1112 into r1113 as validator_datum;
    ternary r988 r987.delegator r1104.delegator into r1114;
    ternary r988 r987.validator r1104.validator into r1115;
    ternary r988 r987.block_height r1104.block_height into r1116;
    ternary r988 r987.bonded_microcredits r1104.bonded_microcredits into r1117;
    ternary r988 r987.microcredits_yield_per_epoch r1104.microcredits_yield_per_epoch into r1118;
    ternary r988 r987.commission r1104.commission into r1119;
    ternary r988 r987.boost r1104.boost into r1120;
    cast r1114 r1115 r1116 r1117 r1118 r1119 r1120 into r1121 as validator_datum;
    ternary r988 true r1105 into r1122;
    is.eq r1121.delegator r47.delegator into r1123;
    is.eq r1121.validator r47.validator into r1124;
    lt r47.block_height r49 into r1125;
    lt r1121.block_height r49 into r1126;
    is.eq r47.microcredits_yield_per_epoch 0u128 into r1127;
    is.eq r1121.microcredits_yield_per_epoch 0u128 into r1128;
    mul r1121.boost 10_000u128 into r1129;
    div r1129 r50[8u32] into r1130;
    add r1121.microcredits_yield_per_epoch r1130 into r1131;
    mul r47.boost 10_000u128 into r1132;
    div r1132 r50[8u32] into r1133;
    add r47.microcredits_yield_per_epoch r1133 into r1134;
    gt r1131 r1134 into r1135;
    lt r1131 r1134 into r1136;
    ternary r1124 r1135 r1136 into r1137;
    ternary r1137 r47.delegator r1121.delegator into r1138;
    ternary r1137 r47.validator r1121.validator into r1139;
    ternary r1137 r47.block_height r1121.block_height into r1140;
    ternary r1137 r47.bonded_microcredits r1121.bonded_microcredits into r1141;
    ternary r1137 r47.microcredits_yield_per_epoch r1121.microcredits_yield_per_epoch into r1142;
    ternary r1137 r47.commission r1121.commission into r1143;
    ternary r1137 r47.boost r1121.boost into r1144;
    cast r1138 r1139 r1140 r1141 r1142 r1143 r1144 into r1145 as validator_datum;
    ternary r1137 r1121.delegator r47.delegator into r1146;
    ternary r1137 r1121.validator r47.validator into r1147;
    ternary r1137 r1121.block_height r47.block_height into r1148;
    ternary r1137 r1121.bonded_microcredits r47.bonded_microcredits into r1149;
    ternary r1137 r1121.microcredits_yield_per_epoch r47.microcredits_yield_per_epoch into r1150;
    ternary r1137 r1121.commission r47.commission into r1151;
    ternary r1137 r1121.boost r47.boost into r1152;
    cast r1146 r1147 r1148 r1149 r1150 r1151 r1152 into r1153 as validator_datum;
    ternary r1137 r1124 r1124 into r1154;
    ternary r1128 r47.delegator r1145.delegator into r1155;
    ternary r1128 r47.validator r1145.validator into r1156;
    ternary r1128 r47.block_height r1145.block_height into r1157;
    ternary r1128 r47.bonded_microcredits r1145.bonded_microcredits into r1158;
    ternary r1128 r47.microcredits_yield_per_epoch r1145.microcredits_yield_per_epoch into r1159;
    ternary r1128 r47.commission r1145.commission into r1160;
    ternary r1128 r47.boost r1145.boost into r1161;
    cast r1155 r1156 r1157 r1158 r1159 r1160 r1161 into r1162 as validator_datum;
    ternary r1128 r1121.delegator r1153.delegator into r1163;
    ternary r1128 r1121.validator r1153.validator into r1164;
    ternary r1128 r1121.block_height r1153.block_height into r1165;
    ternary r1128 r1121.bonded_microcredits r1153.bonded_microcredits into r1166;
    ternary r1128 r1121.microcredits_yield_per_epoch r1153.microcredits_yield_per_epoch into r1167;
    ternary r1128 r1121.commission r1153.commission into r1168;
    ternary r1128 r1121.boost r1153.boost into r1169;
    cast r1163 r1164 r1165 r1166 r1167 r1168 r1169 into r1170 as validator_datum;
    ternary r1128 r1124 r1154 into r1171;
    ternary r1127 r1121.delegator r1162.delegator into r1172;
    ternary r1127 r1121.validator r1162.validator into r1173;
    ternary r1127 r1121.block_height r1162.block_height into r1174;
    ternary r1127 r1121.bonded_microcredits r1162.bonded_microcredits into r1175;
    ternary r1127 r1121.microcredits_yield_per_epoch r1162.microcredits_yield_per_epoch into r1176;
    ternary r1127 r1121.commission r1162.commission into r1177;
    ternary r1127 r1121.boost r1162.boost into r1178;
    cast r1172 r1173 r1174 r1175 r1176 r1177 r1178 into r1179 as validator_datum;
    ternary r1127 r47.delegator r1170.delegator into r1180;
    ternary r1127 r47.validator r1170.validator into r1181;
    ternary r1127 r47.block_height r1170.block_height into r1182;
    ternary r1127 r47.bonded_microcredits r1170.bonded_microcredits into r1183;
    ternary r1127 r47.microcredits_yield_per_epoch r1170.microcredits_yield_per_epoch into r1184;
    ternary r1127 r47.commission r1170.commission into r1185;
    ternary r1127 r47.boost r1170.boost into r1186;
    cast r1180 r1181 r1182 r1183 r1184 r1185 r1186 into r1187 as validator_datum;
    ternary r1127 r1124 r1171 into r1188;
    ternary r1126 r47.delegator r1179.delegator into r1189;
    ternary r1126 r47.validator r1179.validator into r1190;
    ternary r1126 r47.block_height r1179.block_height into r1191;
    ternary r1126 r47.bonded_microcredits r1179.bonded_microcredits into r1192;
    ternary r1126 r47.microcredits_yield_per_epoch r1179.microcredits_yield_per_epoch into r1193;
    ternary r1126 r47.commission r1179.commission into r1194;
    ternary r1126 r47.boost r1179.boost into r1195;
    cast r1189 r1190 r1191 r1192 r1193 r1194 r1195 into r1196 as validator_datum;
    ternary r1126 r1121.delegator r1187.delegator into r1197;
    ternary r1126 r1121.validator r1187.validator into r1198;
    ternary r1126 r1121.block_height r1187.block_height into r1199;
    ternary r1126 r1121.bonded_microcredits r1187.bonded_microcredits into r1200;
    ternary r1126 r1121.microcredits_yield_per_epoch r1187.microcredits_yield_per_epoch into r1201;
    ternary r1126 r1121.commission r1187.commission into r1202;
    ternary r1126 r1121.boost r1187.boost into r1203;
    cast r1197 r1198 r1199 r1200 r1201 r1202 r1203 into r1204 as validator_datum;
    ternary r1126 r1124 r1188 into r1205;
    ternary r1125 r1121.delegator r1196.delegator into r1206;
    ternary r1125 r1121.validator r1196.validator into r1207;
    ternary r1125 r1121.block_height r1196.block_height into r1208;
    ternary r1125 r1121.bonded_microcredits r1196.bonded_microcredits into r1209;
    ternary r1125 r1121.microcredits_yield_per_epoch r1196.microcredits_yield_per_epoch into r1210;
    ternary r1125 r1121.commission r1196.commission into r1211;
    ternary r1125 r1121.boost r1196.boost into r1212;
    cast r1206 r1207 r1208 r1209 r1210 r1211 r1212 into r1213 as validator_datum;
    ternary r1125 r47.delegator r1204.delegator into r1214;
    ternary r1125 r47.validator r1204.validator into r1215;
    ternary r1125 r47.block_height r1204.block_height into r1216;
    ternary r1125 r47.bonded_microcredits r1204.bonded_microcredits into r1217;
    ternary r1125 r47.microcredits_yield_per_epoch r1204.microcredits_yield_per_epoch into r1218;
    ternary r1125 r47.commission r1204.commission into r1219;
    ternary r1125 r47.boost r1204.boost into r1220;
    cast r1214 r1215 r1216 r1217 r1218 r1219 r1220 into r1221 as validator_datum;
    ternary r1125 r1124 r1205 into r1222;
    ternary r1123 r1121.delegator r1213.delegator into r1223;
    ternary r1123 r1121.validator r1213.validator into r1224;
    ternary r1123 r1121.block_height r1213.block_height into r1225;
    ternary r1123 r1121.bonded_microcredits r1213.bonded_microcredits into r1226;
    ternary r1123 r1121.microcredits_yield_per_epoch r1213.microcredits_yield_per_epoch into r1227;
    ternary r1123 r1121.commission r1213.commission into r1228;
    ternary r1123 r1121.boost r1213.boost into r1229;
    cast r1223 r1224 r1225 r1226 r1227 r1228 r1229 into r1230 as validator_datum;
    ternary r1123 r47.delegator r1221.delegator into r1231;
    ternary r1123 r47.validator r1221.validator into r1232;
    ternary r1123 r47.block_height r1221.block_height into r1233;
    ternary r1123 r47.bonded_microcredits r1221.bonded_microcredits into r1234;
    ternary r1123 r47.microcredits_yield_per_epoch r1221.microcredits_yield_per_epoch into r1235;
    ternary r1123 r47.commission r1221.commission into r1236;
    ternary r1123 r47.boost r1221.boost into r1237;
    cast r1231 r1232 r1233 r1234 r1235 r1236 r1237 into r1238 as validator_datum;
    ternary r1123 true r1222 into r1239;
    ternary r1122 r47.delegator r1230.delegator into r1240;
    ternary r1122 r47.validator r1230.validator into r1241;
    ternary r1122 r47.block_height r1230.block_height into r1242;
    ternary r1122 r47.bonded_microcredits r1230.bonded_microcredits into r1243;
    ternary r1122 r47.microcredits_yield_per_epoch r1230.microcredits_yield_per_epoch into r1244;
    ternary r1122 r47.commission r1230.commission into r1245;
    ternary r1122 r47.boost r1230.boost into r1246;
    cast r1240 r1241 r1242 r1243 r1244 r1245 r1246 into r1247 as validator_datum;
    ternary r1122 r1121.delegator r1238.delegator into r1248;
    ternary r1122 r1121.validator r1238.validator into r1249;
    ternary r1122 r1121.block_height r1238.block_height into r1250;
    ternary r1122 r1121.bonded_microcredits r1238.bonded_microcredits into r1251;
    ternary r1122 r1121.microcredits_yield_per_epoch r1238.microcredits_yield_per_epoch into r1252;
    ternary r1122 r1121.commission r1238.commission into r1253;
    ternary r1122 r1121.boost r1238.boost into r1254;
    cast r1248 r1249 r1250 r1251 r1252 r1253 r1254 into r1255 as validator_datum;
    ternary r1122 true r1239 into r1256;
    is.eq r1255.delegator r48.delegator into r1257;
    is.eq r1255.validator r48.validator into r1258;
    lt r48.block_height r49 into r1259;
    lt r1255.block_height r49 into r1260;
    is.eq r48.microcredits_yield_per_epoch 0u128 into r1261;
    is.eq r1255.microcredits_yield_per_epoch 0u128 into r1262;
    mul r1255.boost 10_000u128 into r1263;
    div r1263 r50[9u32] into r1264;
    add r1255.microcredits_yield_per_epoch r1264 into r1265;
    mul r48.boost 10_000u128 into r1266;
    div r1266 r50[9u32] into r1267;
    add r48.microcredits_yield_per_epoch r1267 into r1268;
    gt r1265 r1268 into r1269;
    lt r1265 r1268 into r1270;
    ternary r1258 r1269 r1270 into r1271;
    ternary r1271 r48.delegator r1255.delegator into r1272;
    ternary r1271 r48.validator r1255.validator into r1273;
    ternary r1271 r48.block_height r1255.block_height into r1274;
    ternary r1271 r48.bonded_microcredits r1255.bonded_microcredits into r1275;
    ternary r1271 r48.microcredits_yield_per_epoch r1255.microcredits_yield_per_epoch into r1276;
    ternary r1271 r48.commission r1255.commission into r1277;
    ternary r1271 r48.boost r1255.boost into r1278;
    cast r1272 r1273 r1274 r1275 r1276 r1277 r1278 into r1279 as validator_datum;
    ternary r1271 r1255.delegator r48.delegator into r1280;
    ternary r1271 r1255.validator r48.validator into r1281;
    ternary r1271 r1255.block_height r48.block_height into r1282;
    ternary r1271 r1255.bonded_microcredits r48.bonded_microcredits into r1283;
    ternary r1271 r1255.microcredits_yield_per_epoch r48.microcredits_yield_per_epoch into r1284;
    ternary r1271 r1255.commission r48.commission into r1285;
    ternary r1271 r1255.boost r48.boost into r1286;
    cast r1280 r1281 r1282 r1283 r1284 r1285 r1286 into r1287 as validator_datum;
    ternary r1271 r1258 r1258 into r1288;
    ternary r1262 r48.delegator r1279.delegator into r1289;
    ternary r1262 r48.validator r1279.validator into r1290;
    ternary r1262 r48.block_height r1279.block_height into r1291;
    ternary r1262 r48.bonded_microcredits r1279.bonded_microcredits into r1292;
    ternary r1262 r48.microcredits_yield_per_epoch r1279.microcredits_yield_per_epoch into r1293;
    ternary r1262 r48.commission r1279.commission into r1294;
    ternary r1262 r48.boost r1279.boost into r1295;
    cast r1289 r1290 r1291 r1292 r1293 r1294 r1295 into r1296 as validator_datum;
    ternary r1262 r1255.delegator r1287.delegator into r1297;
    ternary r1262 r1255.validator r1287.validator into r1298;
    ternary r1262 r1255.block_height r1287.block_height into r1299;
    ternary r1262 r1255.bonded_microcredits r1287.bonded_microcredits into r1300;
    ternary r1262 r1255.microcredits_yield_per_epoch r1287.microcredits_yield_per_epoch into r1301;
    ternary r1262 r1255.commission r1287.commission into r1302;
    ternary r1262 r1255.boost r1287.boost into r1303;
    cast r1297 r1298 r1299 r1300 r1301 r1302 r1303 into r1304 as validator_datum;
    ternary r1262 r1258 r1288 into r1305;
    ternary r1261 r1255.delegator r1296.delegator into r1306;
    ternary r1261 r1255.validator r1296.validator into r1307;
    ternary r1261 r1255.block_height r1296.block_height into r1308;
    ternary r1261 r1255.bonded_microcredits r1296.bonded_microcredits into r1309;
    ternary r1261 r1255.microcredits_yield_per_epoch r1296.microcredits_yield_per_epoch into r1310;
    ternary r1261 r1255.commission r1296.commission into r1311;
    ternary r1261 r1255.boost r1296.boost into r1312;
    cast r1306 r1307 r1308 r1309 r1310 r1311 r1312 into r1313 as validator_datum;
    ternary r1261 r48.delegator r1304.delegator into r1314;
    ternary r1261 r48.validator r1304.validator into r1315;
    ternary r1261 r48.block_height r1304.block_height into r1316;
    ternary r1261 r48.bonded_microcredits r1304.bonded_microcredits into r1317;
    ternary r1261 r48.microcredits_yield_per_epoch r1304.microcredits_yield_per_epoch into r1318;
    ternary r1261 r48.commission r1304.commission into r1319;
    ternary r1261 r48.boost r1304.boost into r1320;
    cast r1314 r1315 r1316 r1317 r1318 r1319 r1320 into r1321 as validator_datum;
    ternary r1261 r1258 r1305 into r1322;
    ternary r1260 r48.delegator r1313.delegator into r1323;
    ternary r1260 r48.validator r1313.validator into r1324;
    ternary r1260 r48.block_height r1313.block_height into r1325;
    ternary r1260 r48.bonded_microcredits r1313.bonded_microcredits into r1326;
    ternary r1260 r48.microcredits_yield_per_epoch r1313.microcredits_yield_per_epoch into r1327;
    ternary r1260 r48.commission r1313.commission into r1328;
    ternary r1260 r48.boost r1313.boost into r1329;
    cast r1323 r1324 r1325 r1326 r1327 r1328 r1329 into r1330 as validator_datum;
    ternary r1260 r1255.delegator r1321.delegator into r1331;
    ternary r1260 r1255.validator r1321.validator into r1332;
    ternary r1260 r1255.block_height r1321.block_height into r1333;
    ternary r1260 r1255.bonded_microcredits r1321.bonded_microcredits into r1334;
    ternary r1260 r1255.microcredits_yield_per_epoch r1321.microcredits_yield_per_epoch into r1335;
    ternary r1260 r1255.commission r1321.commission into r1336;
    ternary r1260 r1255.boost r1321.boost into r1337;
    cast r1331 r1332 r1333 r1334 r1335 r1336 r1337 into r1338 as validator_datum;
    ternary r1260 r1258 r1322 into r1339;
    ternary r1259 r1255.delegator r1330.delegator into r1340;
    ternary r1259 r1255.validator r1330.validator into r1341;
    ternary r1259 r1255.block_height r1330.block_height into r1342;
    ternary r1259 r1255.bonded_microcredits r1330.bonded_microcredits into r1343;
    ternary r1259 r1255.microcredits_yield_per_epoch r1330.microcredits_yield_per_epoch into r1344;
    ternary r1259 r1255.commission r1330.commission into r1345;
    ternary r1259 r1255.boost r1330.boost into r1346;
    cast r1340 r1341 r1342 r1343 r1344 r1345 r1346 into r1347 as validator_datum;
    ternary r1259 r48.delegator r1338.delegator into r1348;
    ternary r1259 r48.validator r1338.validator into r1349;
    ternary r1259 r48.block_height r1338.block_height into r1350;
    ternary r1259 r48.bonded_microcredits r1338.bonded_microcredits into r1351;
    ternary r1259 r48.microcredits_yield_per_epoch r1338.microcredits_yield_per_epoch into r1352;
    ternary r1259 r48.commission r1338.commission into r1353;
    ternary r1259 r48.boost r1338.boost into r1354;
    cast r1348 r1349 r1350 r1351 r1352 r1353 r1354 into r1355 as validator_datum;
    ternary r1259 r1258 r1339 into r1356;
    ternary r1257 r1255.delegator r1347.delegator into r1357;
    ternary r1257 r1255.validator r1347.validator into r1358;
    ternary r1257 r1255.block_height r1347.block_height into r1359;
    ternary r1257 r1255.bonded_microcredits r1347.bonded_microcredits into r1360;
    ternary r1257 r1255.microcredits_yield_per_epoch r1347.microcredits_yield_per_epoch into r1361;
    ternary r1257 r1255.commission r1347.commission into r1362;
    ternary r1257 r1255.boost r1347.boost into r1363;
    cast r1357 r1358 r1359 r1360 r1361 r1362 r1363 into r1364 as validator_datum;
    ternary r1257 r48.delegator r1355.delegator into r1365;
    ternary r1257 r48.validator r1355.validator into r1366;
    ternary r1257 r48.block_height r1355.block_height into r1367;
    ternary r1257 r48.bonded_microcredits r1355.bonded_microcredits into r1368;
    ternary r1257 r48.microcredits_yield_per_epoch r1355.microcredits_yield_per_epoch into r1369;
    ternary r1257 r48.commission r1355.commission into r1370;
    ternary r1257 r48.boost r1355.boost into r1371;
    cast r1365 r1366 r1367 r1368 r1369 r1370 r1371 into r1372 as validator_datum;
    ternary r1257 true r1356 into r1373;
    ternary r1256 r48.delegator r1364.delegator into r1374;
    ternary r1256 r48.validator r1364.validator into r1375;
    ternary r1256 r48.block_height r1364.block_height into r1376;
    ternary r1256 r48.bonded_microcredits r1364.bonded_microcredits into r1377;
    ternary r1256 r48.microcredits_yield_per_epoch r1364.microcredits_yield_per_epoch into r1378;
    ternary r1256 r48.commission r1364.commission into r1379;
    ternary r1256 r48.boost r1364.boost into r1380;
    cast r1374 r1375 r1376 r1377 r1378 r1379 r1380 into r1381 as validator_datum;
    ternary r1256 r1255.delegator r1372.delegator into r1382;
    ternary r1256 r1255.validator r1372.validator into r1383;
    ternary r1256 r1255.block_height r1372.block_height into r1384;
    ternary r1256 r1255.bonded_microcredits r1372.bonded_microcredits into r1385;
    ternary r1256 r1255.microcredits_yield_per_epoch r1372.microcredits_yield_per_epoch into r1386;
    ternary r1256 r1255.commission r1372.commission into r1387;
    ternary r1256 r1255.boost r1372.boost into r1388;
    cast r1382 r1383 r1384 r1385 r1386 r1387 r1388 into r1389 as validator_datum;
    ternary r1256 true r1373 into r1390;
    cast  r175.delegator r309.delegator r443.delegator r577.delegator r711.delegator r845.delegator r979.delegator r1113.delegator r1247.delegator r1381.delegator into r1391 as [address; 10u32];
    set r1391 into top_validators[0u8];






function remove_delegator:
    async remove_delegator self.caller into r0;
    output r0 as pondo_oracle.aleo/remove_delegator.future;

finalize remove_delegator:
    input r0 as address.public;
    rem block.height 120_960u32 into r1;
    lt r1 103_680u32 into r2;
    assert.eq r2 true;
    contains delegator_to_validator[r0] into r3;
    branch.eq r3 false to end_then_0_0;
    remove delegator_to_validator[r0];
    branch.eq true true to end_otherwise_0_1;
    position end_then_0_0;
    position end_otherwise_0_1;
    contains validator_data[r0] into r4;
    branch.eq r4 false to end_then_0_2;
    remove validator_data[r0];
    branch.eq true true to end_otherwise_0_3;
    position end_then_0_2;
    position end_otherwise_0_3;
    get top_validators[0u8] into r5;
    is.eq r5[0u32] r0 into r6;
    ternary r6 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[0u32] into r7;
    is.eq r5[1u32] r0 into r8;
    ternary r8 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[1u32] into r9;
    is.eq r5[2u32] r0 into r10;
    ternary r10 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[2u32] into r11;
    is.eq r5[3u32] r0 into r12;
    ternary r12 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[3u32] into r13;
    is.eq r5[4u32] r0 into r14;
    ternary r14 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[4u32] into r15;
    is.eq r5[5u32] r0 into r16;
    ternary r16 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[5u32] into r17;
    is.eq r5[6u32] r0 into r18;
    ternary r18 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[6u32] into r19;
    is.eq r5[7u32] r0 into r20;
    ternary r20 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[7u32] into r21;
    is.eq r5[8u32] r0 into r22;
    ternary r22 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[8u32] into r23;
    is.eq r5[9u32] r0 into r24;
    ternary r24 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[9u32] into r25;
    is.eq r7 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r26;
    ternary r26 r9 r7 into r27;
    ternary r26 r7 r9 into r28;
    is.eq r28 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r29;
    ternary r29 r11 r28 into r30;
    ternary r29 r28 r11 into r31;
    is.eq r31 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r32;
    ternary r32 r13 r31 into r33;
    ternary r32 r31 r13 into r34;
    is.eq r34 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r35;
    ternary r35 r15 r34 into r36;
    ternary r35 r34 r15 into r37;
    is.eq r37 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r38;
    ternary r38 r17 r37 into r39;
    ternary r38 r37 r17 into r40;
    is.eq r40 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r41;
    ternary r41 r19 r40 into r42;
    ternary r41 r40 r19 into r43;
    is.eq r43 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r44;
    ternary r44 r21 r43 into r45;
    ternary r44 r43 r21 into r46;
    is.eq r46 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r47;
    ternary r47 r23 r46 into r48;
    ternary r47 r46 r23 into r49;
    is.eq r49 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r50;
    ternary r50 r25 r49 into r51;
    ternary r50 r49 r25 into r52;
    cast  r27 r30 r33 r36 r39 r42 r45 r48 r51 r52 into r53 as [address; 10u32];
    set r53 into top_validators[0u8];




function pondo_ban_validator:
    input r0 as address.public;
    assert.neq r0 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc;
    assert.neq r0 aleo1qgqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqanmpl0;
    async pondo_ban_validator r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/pondo_ban_validator.future;

finalize pondo_ban_validator:
    input r0 as address.public;
    input r1 as address.public;
    contains control_addresses[r1] into r2;
    assert.eq r2 true;
    set true into banned_validators[r0];




function ban_validator:
    input r0 as address.public;
    async ban_validator r0 into r1;
    output r1 as pondo_oracle.aleo/ban_validator.future;

finalize ban_validator:
    input r0 as address.public;
    get delegator_to_validator[r0] into r1;
    rem block.height 120_960u32 into r2;
    gte r2 103_680u32 into r3;
    assert.eq r3 true;
    add 50u8 1u8 into r4;
    cast false r4 into r5 as committee_state;
    get.or_use credits.aleo/committee[r1] r5 into r6;
    not r6.is_open into r7;
    gt r6.commission 50u8 into r8;
    or r7 r8 into r9;
    assert.eq r9 true;
    set true into banned_validators[r1];




function set_pondo_tvl:
    input r0 as u64.public;
    assert.eq self.caller pondo_core_protocol.aleo;
    async set_pondo_tvl r0 into r1;
    output r1 as pondo_oracle.aleo/set_pondo_tvl.future;

finalize set_pondo_tvl:
    input r0 as u64.public;
    set r0 into pondo_tvl[0u8];




function ban_self:
    input r0 as address.private;
    async ban_self r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/ban_self.future;

finalize ban_self:
    input r0 as address.public;
    input r1 as address.public;
    get credits.aleo/withdraw[r0] into r2;
    assert.eq r2 r1;
    contains credits.aleo/committee[r0] into r3;
    assert.eq r3 true;
    set true into banned_validators[r0];




function boost_validator:
    input r0 as address.public;
    input r1 as u64.public;
    call credits.aleo/transfer_public_as_signer pondo_core_protocol.aleo r1 into r2;
    async boost_validator r2 r0 r1 into r3;
    output r3 as pondo_oracle.aleo/boost_validator.future;

finalize boost_validator:
    input r0 as credits.aleo/transfer_public_as_signer.future;
    input r1 as address.public;
    input r2 as u64.public;
    await r0;
    div block.height 120_960u32 into r3;
    rem block.height 120_960u32 into r4;
    gte r4 103_680u32 into r5;
    not r5 into r6;
    assert.eq r6 true;
    cast 0u32 0u64 into r7 as validator_boost;
    get.or_use validator_boosting[r1] r7 into r8;
    is.eq r8.epoch r3 into r9;
    add r8.boost_amount r2 into r10;
    ternary r9 r10 r2 into r11;
    cast r3 r11 into r12 as validator_boost;
    set r12 into validator_boosting[r1];

